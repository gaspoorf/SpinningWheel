{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import'./css/wheel.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const triangle=/*#__PURE__*/_jsx(\"polygon\",{points:\"50,5 55,-5 45,-5\",fill:\"yellow\",stroke:\"black\",strokeWidth:\"1\"});const Wheel=()=>{const[fields,setFields]=useState([{id:1,name:'Section 1',color:'lightgreen'},{id:2,name:'Section 2',color:'lightblue'}]);const[result,setResult]=useState(null);const[rotation,setRotation]=useState(0);const[isSpinning,setIsSpinning]=useState(false);const wheelRef=useRef(null);const triangleRef=useRef(null);const handleAddField=()=>{const newColor=fields.length%2===0?'lightgreen':'lightblue';const newField={id:fields.length+1,name:\"Section \".concat(fields.length+1),color:newColor};setFields(prevFields=>[...prevFields,newField]);};const handleRemoveField=()=>{if(fields.length>1){setFields(prevFields=>prevFields.slice(0,-1));}};const handleFieldNameChange=(id,value)=>{setFields(prevFields=>prevFields.map(field=>field.id===id?{...field,name:value}:field));};const handleStartSpin=()=>{setResult(null);setIsSpinning(true);const totalDuration=3000;const start=Date.now();const samples=200;const spinAnimation=()=>{const elapsed=Date.now()-start;const progress=Math.min(elapsed/totalDuration,1);const easedProgress=0.5-0.5*Math.cos(progress*Math.PI);const rotation=720*easedProgress;setRotation(rotation);};const spinInterval=setInterval(spinAnimation,16);setTimeout(()=>{clearInterval(spinInterval);setIsSpinning(false);const wheelRect=wheelRef.current.getBoundingClientRect();const triangleRect=triangleRef.current.getBoundingClientRect();const triangleCenterX=triangleRect.left+triangleRect.width/2;const triangleCenterY=triangleRect.top+triangleRect.height/2;const wheelCenterX=wheelRect.left+wheelRect.width/2;const wheelCenterY=wheelRect.top+wheelRect.height/2;const angle=Math.atan2(triangleCenterY-wheelCenterY,triangleCenterX-wheelCenterX)*(180/Math.PI);const normalizedAngle=(angle+360)%360;const sectionAngle=360/fields.length;const selectedSectionIndex=Math.floor(normalizedAngle/sectionAngle);setResult(selectedSectionIndex!==null?selectedSectionIndex:0);},totalDuration+100);};const calculatePath=index=>{const totalFields=fields.length;const angle=360/totalFields*index;const startAngle=angle;const endAngle=angle+360/totalFields;const radius=50;const startX=50+radius*Math.cos(startAngle*Math.PI/180);const startY=50+radius*Math.sin(startAngle*Math.PI/180);const endX=50+radius*Math.cos(endAngle*Math.PI/180);const endY=50+radius*Math.sin(endAngle*Math.PI/180);const largeArcFlag=endAngle-startAngle<=180?0:1;const color=fields[index].color;const textX=50+radius*0.8*Math.cos((startAngle+endAngle)/2*(Math.PI/180));const textY=50+radius*0.8*Math.sin((startAngle+endAngle)/2*(Math.PI/180));return{path:/*#__PURE__*/_jsx(\"path\",{d:\"M50 50 L\".concat(startX,\" \").concat(startY,\" A\").concat(radius,\" \").concat(radius,\" 0 \").concat(largeArcFlag,\" 1 \").concat(endX,\" \").concat(endY,\" Z\"),fill:color,stroke:\"black\",strokeWidth:\"1\"},index),text:/*#__PURE__*/_jsx(\"text\",{x:textX,y:textY,fontSize:\"5\",textAnchor:\"middle\",fill:\"black\",children:fields[index].name})};};return/*#__PURE__*/_jsxs(\"div\",{className:\"roulette-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Wheel Spinner\"}),/*#__PURE__*/_jsx(\"div\",{className:\"wheel\",ref:wheelRef,children:/*#__PURE__*/_jsxs(\"svg\",{viewBox:\"0 0 100 100\",width:\"200\",height:\"200\",children:[/*#__PURE__*/_jsx(\"g\",{transform:\"rotate(\".concat(rotation,\" 50 50)\"),children:fields.map((_,index)=>{const{path,text}=calculatePath(index);const isHighlighted=!isSpinning&&result!==null&&index===result;return/*#__PURE__*/_jsxs(\"g\",{className:isHighlighted?'highlighted-section selected-indicator':'selected-indicator',children:[path,text]},index);})}),/*#__PURE__*/_jsx(\"g\",{ref:triangleRef,children:triangle})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"fields-container\",children:fields.map(field=>/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Champ \".concat(field.id),value:field.name,onChange:e=>handleFieldNameChange(field.id,e.target.value)},field.id))}),/*#__PURE__*/_jsx(\"button\",{onClick:handleAddField,children:\"Ajouter un champ\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleRemoveField,disabled:fields.length<2,children:\"Supprimer un champ\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleStartSpin,disabled:fields.length<2||isSpinning,children:\"Lancer la roue\"}),result!==null&&/*#__PURE__*/_jsxs(\"p\",{children:[\"R\\xE9sultat: \",fields[result].name]})]});};export default Wheel;","map":{"version":3,"names":["React","useState","useRef","useEffect","jsx","_jsx","jsxs","_jsxs","triangle","points","fill","stroke","strokeWidth","Wheel","fields","setFields","id","name","color","result","setResult","rotation","setRotation","isSpinning","setIsSpinning","wheelRef","triangleRef","handleAddField","newColor","length","newField","concat","prevFields","handleRemoveField","slice","handleFieldNameChange","value","map","field","handleStartSpin","totalDuration","start","Date","now","samples","spinAnimation","elapsed","progress","Math","min","easedProgress","cos","PI","spinInterval","setInterval","setTimeout","clearInterval","wheelRect","current","getBoundingClientRect","triangleRect","triangleCenterX","left","width","triangleCenterY","top","height","wheelCenterX","wheelCenterY","angle","atan2","normalizedAngle","sectionAngle","selectedSectionIndex","floor","calculatePath","index","totalFields","startAngle","endAngle","radius","startX","startY","sin","endX","endY","largeArcFlag","textX","textY","path","d","text","x","y","fontSize","textAnchor","children","className","ref","viewBox","transform","_","isHighlighted","type","placeholder","onChange","e","target","onClick","disabled"],"sources":["C:/Users/gaspa/OneDrive/Documents/MMI 2/S4/React/SpinningWheel/spin-wheel/src/components/SpinWheel.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport './css/wheel.css';\r\n\r\nconst triangle = (\r\n  <polygon\r\n    points=\"50,5 55,-5 45,-5\"\r\n    fill=\"yellow\"\r\n    stroke=\"black\"\r\n    strokeWidth=\"1\"\r\n  />\r\n);\r\n\r\nconst Wheel = () => {\r\n  const [fields, setFields] = useState([\r\n    { id: 1, name: 'Section 1', color: 'lightgreen' },\r\n    { id: 2, name: 'Section 2', color: 'lightblue' },\r\n  ]);\r\n  const [result, setResult] = useState(null);\r\n  const [rotation, setRotation] = useState(0);\r\n  const [isSpinning, setIsSpinning] = useState(false);\r\n\r\n  const wheelRef = useRef(null);\r\n  const triangleRef = useRef(null);\r\n\r\n  const handleAddField = () => {\r\n    const newColor = fields.length % 2 === 0 ? 'lightgreen' : 'lightblue';\r\n    const newField = { id: fields.length + 1, name: `Section ${fields.length + 1}`, color: newColor };\r\n    setFields((prevFields) => [...prevFields, newField]);\r\n  };\r\n\r\n  const handleRemoveField = () => {\r\n    if (fields.length > 1) {\r\n      setFields((prevFields) => prevFields.slice(0, -1));\r\n    }\r\n  };\r\n\r\n  const handleFieldNameChange = (id, value) => {\r\n    setFields((prevFields) =>\r\n      prevFields.map((field) => (field.id === id ? { ...field, name: value } : field))\r\n    );\r\n  };\r\n\r\n  const handleStartSpin = () => {\r\n    setResult(null);\r\n    setIsSpinning(true);\r\n\r\n    const totalDuration = 3000;\r\n    const start = Date.now();\r\n    const samples = 200;\r\n\r\n    const spinAnimation = () => {\r\n      const elapsed = Date.now() - start;\r\n      const progress = Math.min(elapsed / totalDuration, 1);\r\n      const easedProgress = 0.5 - 0.5 * Math.cos(progress * Math.PI);\r\n\r\n      const rotation = 720 * easedProgress;\r\n      setRotation(rotation);\r\n    };\r\n\r\n    const spinInterval = setInterval(spinAnimation, 16);\r\n\r\n    setTimeout(() => {\r\n      clearInterval(spinInterval);\r\n      setIsSpinning(false);\r\n\r\n      const wheelRect = wheelRef.current.getBoundingClientRect();\r\n      const triangleRect = triangleRef.current.getBoundingClientRect();\r\n\r\n      const triangleCenterX = triangleRect.left + triangleRect.width / 2;\r\n      const triangleCenterY = triangleRect.top + triangleRect.height / 2;\r\n\r\n      const wheelCenterX = wheelRect.left + wheelRect.width / 2;\r\n      const wheelCenterY = wheelRect.top + wheelRect.height / 2;\r\n\r\n      const angle = Math.atan2(triangleCenterY - wheelCenterY, triangleCenterX - wheelCenterX) * (180 / Math.PI);\r\n      const normalizedAngle = (angle + 360) % 360;\r\n\r\n      const sectionAngle = 360 / fields.length;\r\n      const selectedSectionIndex = Math.floor(normalizedAngle / sectionAngle);\r\n\r\n      setResult(selectedSectionIndex !== null ? selectedSectionIndex : 0);\r\n    }, totalDuration + 100);\r\n  };\r\n\r\n  const calculatePath = (index) => {\r\n    const totalFields = fields.length;\r\n    const angle = (360 / totalFields) * index;\r\n    const startAngle = angle;\r\n    const endAngle = angle + (360 / totalFields);\r\n\r\n    const radius = 50;\r\n\r\n    const startX = 50 + radius * Math.cos((startAngle * Math.PI) / 180);\r\n    const startY = 50 + radius * Math.sin((startAngle * Math.PI) / 180);\r\n    const endX = 50 + radius * Math.cos((endAngle * Math.PI) / 180);\r\n    const endY = 50 + radius * Math.sin((endAngle * Math.PI) / 180);\r\n\r\n    const largeArcFlag = endAngle - startAngle <= 180 ? 0 : 1;\r\n    const color = fields[index].color;\r\n\r\n    const textX = 50 + radius * 0.8 * Math.cos(((startAngle + endAngle) / 2) * (Math.PI / 180));\r\n    const textY = 50 + radius * 0.8 * Math.sin(((startAngle + endAngle) / 2) * (Math.PI / 180));\r\n\r\n    return {\r\n      path: (\r\n        <path\r\n          key={index}\r\n          d={`M50 50 L${startX} ${startY} A${radius} ${radius} 0 ${largeArcFlag} 1 ${endX} ${endY} Z`}\r\n          fill={color}\r\n          stroke=\"black\"\r\n          strokeWidth=\"1\"\r\n        />\r\n      ),\r\n      text: (\r\n        <text x={textX} y={textY} fontSize=\"5\" textAnchor=\"middle\" fill=\"black\">\r\n          {fields[index].name}\r\n        </text>\r\n      ),\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"roulette-container\">\r\n      <h2>Wheel Spinner</h2>\r\n      <div className=\"wheel\" ref={wheelRef}>\r\n        <svg viewBox=\"0 0 100 100\" width=\"200\" height=\"200\">\r\n          <g transform={`rotate(${rotation} 50 50)`}>\r\n            {fields.map((_, index) => {\r\n              const { path, text } = calculatePath(index);\r\n              const isHighlighted = !isSpinning && result !== null && index === result;\r\n\r\n              return (\r\n                <g\r\n                  key={index}\r\n                  className={isHighlighted ? 'highlighted-section selected-indicator' : 'selected-indicator'}\r\n                >\r\n                  {path}\r\n                  {text}\r\n                </g>\r\n              );\r\n            })}\r\n          </g>\r\n          <g ref={triangleRef}>\r\n            {triangle}\r\n          </g>\r\n        </svg>\r\n      </div>\r\n\r\n      <div className=\"fields-container\">\r\n        {fields.map((field) => (\r\n          <input\r\n            key={field.id}\r\n            type=\"text\"\r\n            placeholder={`Champ ${field.id}`}\r\n            value={field.name}\r\n            onChange={(e) => handleFieldNameChange(field.id, e.target.value)}\r\n          />\r\n        ))}\r\n      </div>\r\n      <button onClick={handleAddField}>Ajouter un champ</button>\r\n      <button onClick={handleRemoveField} disabled={fields.length < 2}>\r\n        Supprimer un champ\r\n      </button>\r\n      <button onClick={handleStartSpin} disabled={fields.length < 2 || isSpinning}>\r\n        Lancer la roue\r\n      </button>\r\n      {result !== null && <p>Résultat: {fields[result].name}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wheel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}