{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaspa\\\\OneDrive\\\\Documents\\\\MMI 2\\\\S4\\\\React\\\\Spin-Wheel\\\\spin-wheel\\\\src\\\\components\\\\SpinWheel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './Roulette.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Roulette = () => {\n  _s();\n  const [fields, setFields] = useState([{\n    id: 1,\n    name: ''\n  }]);\n  const [result, setResult] = useState(null);\n  const wheelRef = useRef(null);\n  useEffect(() => {\n    if (wheelRef.current) {\n      // Rotation aléatoire initiale\n      const initialRotation = Math.floor(Math.random() * 360);\n      wheelRef.current.style.transform = `rotate(${initialRotation}deg)`;\n    }\n  }, []);\n  const handleAddField = () => {\n    const newField = {\n      id: fields.length + 1,\n      name: ''\n    };\n    setFields(prevFields => [...prevFields, newField]);\n  };\n  const handleRemoveField = () => {\n    if (fields.length > 1) {\n      setFields(prevFields => prevFields.slice(0, -1));\n    }\n  };\n  const handleFieldNameChange = (id, value) => {\n    setFields(prevFields => prevFields.map(field => field.id === id ? {\n      ...field,\n      name: value\n    } : field));\n  };\n  const handleStartSpin = () => {\n    // Logique pour tourner la roue et afficher le résultat\n    const randomResult = Math.floor(Math.random() * fields.length);\n    setResult(randomResult);\n\n    // Rotation aléatoire\n    const randomRotation = 1080 + Math.floor(Math.random() * 1080); // entre 1080 et 2160 degrés\n    wheelRef.current.style.transform = `rotate(${randomRotation}deg)`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"roulette-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Roulette Spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roulette-wheel\",\n      ref: wheelRef,\n      children: fields.map((field, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        style: {\n          backgroundColor: `#${Math.floor(Math.random() * 16777215).toString(16)}`\n        },\n        children: field.name || `Champ ${index + 1}`\n      }, field.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddField,\n      children: \"Ajouter un champ\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRemoveField,\n      disabled: fields.length < 2,\n      children: \"Supprimer le dernier champ\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartSpin,\n      disabled: fields.length < 2,\n      children: \"Lancer la roue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), result !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"R\\xE9sultat: \", fields[result].name || `Champ ${result + 1}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Roulette, \"YYQ272IZgvk/Jhksccl00Q5azF0=\");\n_c = Roulette;\nexport default Roulette;\nvar _c;\n$RefreshReg$(_c, \"Roulette\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Roulette","_s","fields","setFields","id","name","result","setResult","wheelRef","current","initialRotation","Math","floor","random","style","transform","handleAddField","newField","length","prevFields","handleRemoveField","slice","handleFieldNameChange","value","map","field","handleStartSpin","randomResult","randomRotation","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","index","backgroundColor","toString","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/gaspa/OneDrive/Documents/MMI 2/S4/React/Spin-Wheel/spin-wheel/src/components/SpinWheel.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport './Roulette.css';\r\n\r\nconst Roulette = () => {\r\n  const [fields, setFields] = useState([{ id: 1, name: '' }]);\r\n  const [result, setResult] = useState(null);\r\n  const wheelRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (wheelRef.current) {\r\n      // Rotation aléatoire initiale\r\n      const initialRotation = Math.floor(Math.random() * 360);\r\n      wheelRef.current.style.transform = `rotate(${initialRotation}deg)`;\r\n    }\r\n  }, []);\r\n\r\n  const handleAddField = () => {\r\n    const newField = { id: fields.length + 1, name: '' };\r\n    setFields(prevFields => [...prevFields, newField]);\r\n  };\r\n\r\n  const handleRemoveField = () => {\r\n    if (fields.length > 1) {\r\n      setFields(prevFields => prevFields.slice(0, -1));\r\n    }\r\n  };\r\n\r\n  const handleFieldNameChange = (id, value) => {\r\n    setFields(prevFields =>\r\n      prevFields.map(field => (field.id === id ? { ...field, name: value } : field))\r\n    );\r\n  };\r\n\r\n  const handleStartSpin = () => {\r\n    // Logique pour tourner la roue et afficher le résultat\r\n    const randomResult = Math.floor(Math.random() * fields.length);\r\n    setResult(randomResult);\r\n\r\n    // Rotation aléatoire\r\n    const randomRotation = 1080 + Math.floor(Math.random() * 1080); // entre 1080 et 2160 degrés\r\n    wheelRef.current.style.transform = `rotate(${randomRotation}deg)`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"roulette-container\">\r\n      <h2>Roulette Spinner</h2>\r\n      <div className=\"roulette-wheel\" ref={wheelRef}>\r\n        {fields.map((field, index) => (\r\n          <div\r\n            key={field.id}\r\n            className=\"field\"\r\n            style={{ backgroundColor: `#${Math.floor(Math.random() * 16777215).toString(16)}` }}\r\n          >\r\n            {field.name || `Champ ${index + 1}`}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <button onClick={handleAddField}>Ajouter un champ</button>\r\n      <button onClick={handleRemoveField} disabled={fields.length < 2}>\r\n        Supprimer le dernier champ\r\n      </button>\r\n      <button onClick={handleStartSpin} disabled={fields.length < 2}>\r\n        Lancer la roue\r\n      </button>\r\n      {result !== null && <p>Résultat: {fields[result].name || `Champ ${result + 1}`}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Roulette;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}