{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaspa\\\\OneDrive\\\\Documents\\\\MMI 2\\\\S4\\\\React\\\\SpinningWheel\\\\spin-wheel\\\\src\\\\components\\\\RoulettePage.jsx\";\nimport React from 'react';\nimport WheelComponent from \"./WheelConstructor.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RoulettePage({\n  segments,\n  onBack\n}) {\n  // Fonction pour alterner entre les couleurs violet et rose\n  const alternateColors = index => {\n    return index % 2 === 0 ? \"#C622C0\" : \"#dc87d9\";\n  };\n\n  // Générer les couleurs des segments en fonction de l'alternance définie\n  const segColors = segments.map((segment, index) => alternateColors(index));\n  const onFinished = winner => {\n    console.log(\"caca\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title marg-top2\",\n      children: \"SPIN !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wheel\",\n      children: /*#__PURE__*/_jsxDEV(WheelComponent, {\n        segments: segments,\n        segColors: segColors,\n        onFinished: onFinished,\n        primaryColor: \"black\",\n        contrastColor: \"white\",\n        buttonText: \"Spin\",\n        isOnlyOnce: false,\n        size: 160,\n        upDuration: 500,\n        downDuration: 600,\n        fontFamily: \"'Luckiest Guy', cursive\",\n        fontSize: 400\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button-stay\",\n      onClick: onBack,\n      children: \"Modify Wheel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_c = RoulettePage;\nvar _c;\n$RefreshReg$(_c, \"RoulettePage\");","map":{"version":3,"names":["React","WheelComponent","jsxDEV","_jsxDEV","RoulettePage","segments","onBack","alternateColors","index","segColors","map","segment","onFinished","winner","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","primaryColor","contrastColor","buttonText","isOnlyOnce","size","upDuration","downDuration","fontFamily","fontSize","onClick","_c","$RefreshReg$"],"sources":["C:/Users/gaspa/OneDrive/Documents/MMI 2/S4/React/SpinningWheel/spin-wheel/src/components/RoulettePage.jsx"],"sourcesContent":["import React from 'react';\r\nimport WheelComponent from \"./WheelConstructor.jsx\";\r\n\r\nexport default function RoulettePage({ segments, onBack }) {\r\n  // Fonction pour alterner entre les couleurs violet et rose\r\n  const alternateColors = (index) => {\r\n    return index % 2 === 0 ? \"#C622C0\" : \"#dc87d9\";\r\n  };\r\n\r\n  // Générer les couleurs des segments en fonction de l'alternance définie\r\n  const segColors = segments.map((segment, index) => alternateColors(index));\r\n\r\n  const onFinished = (winner) => {\r\n    console.log(\"caca\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className='title marg-top2'>SPIN !</h1>\r\n      <div className='wheel'>\r\n        \r\n        <WheelComponent\r\n          segments={segments}\r\n          segColors={segColors}\r\n          onFinished={onFinished}\r\n          primaryColor=\"black\"\r\n          contrastColor=\"white\"\r\n          buttonText=\"Spin\"\r\n          isOnlyOnce={false}\r\n          size={160}\r\n          upDuration={500}\r\n          downDuration={600}\r\n          fontFamily=\"'Luckiest Guy', cursive\"\r\n          fontSize={400}\r\n        />\r\n      </div>\r\n      {/* Bouton pour retourner à la page de configuration des champs */}\r\n      <button className='button-stay' onClick={onBack}>Modify Wheel</button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,eAAe,SAASC,YAAYA,CAAC;EAAEC,QAAQ;EAAEC;AAAO,CAAC,EAAE;EACzD;EACA,MAAMC,eAAe,GAAIC,KAAK,IAAK;IACjC,OAAOA,KAAK,GAAG,CAAC,KAAK,CAAC,GAAG,SAAS,GAAG,SAAS;EAChD,CAAC;;EAED;EACA,MAAMC,SAAS,GAAGJ,QAAQ,CAACK,GAAG,CAAC,CAACC,OAAO,EAAEH,KAAK,KAAKD,eAAe,CAACC,KAAK,CAAC,CAAC;EAE1E,MAAMI,UAAU,GAAIC,MAAM,IAAK;IAC7BC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;EACrB,CAAC;EAED,oBACEZ,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAIc,SAAS,EAAC,iBAAiB;MAAAD,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3ClB,OAAA;MAAKc,SAAS,EAAC,OAAO;MAAAD,QAAA,eAEpBb,OAAA,CAACF,cAAc;QACbI,QAAQ,EAAEA,QAAS;QACnBI,SAAS,EAAEA,SAAU;QACrBG,UAAU,EAAEA,UAAW;QACvBU,YAAY,EAAC,OAAO;QACpBC,aAAa,EAAC,OAAO;QACrBC,UAAU,EAAC,MAAM;QACjBC,UAAU,EAAE,KAAM;QAClBC,IAAI,EAAE,GAAI;QACVC,UAAU,EAAE,GAAI;QAChBC,YAAY,EAAE,GAAI;QAClBC,UAAU,EAAC,yBAAyB;QACpCC,QAAQ,EAAE;MAAI;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENlB,OAAA;MAAQc,SAAS,EAAC,aAAa;MAACc,OAAO,EAAEzB,MAAO;MAAAU,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnE,CAAC;AAEV;AAACW,EAAA,GArCuB5B,YAAY;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}