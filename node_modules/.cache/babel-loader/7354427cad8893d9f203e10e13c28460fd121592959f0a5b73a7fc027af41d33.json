{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaspa\\\\OneDrive\\\\Documents\\\\MMI 2\\\\S4\\\\React\\\\SpinningWheel\\\\spin-wheel\\\\src\\\\components\\\\SpinWheel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './css/wheel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [numSections, setNumSections] = useState(4); // Nombre de sections par défaut\n  const [sections, setSections] = useState(Array.from({\n    length: numSections\n  }, (_, index) => `Section ${index + 1}`));\n  const [winnerIndex, setWinnerIndex] = useState(0);\n  const rouletteRef = useRef(null);\n  const pointerRef = useRef(null);\n  const handleNumSectionsChange = e => {\n    const newNumSections = parseInt(e.target.value, 10);\n    setNumSections(newNumSections);\n    setSections(Array.from({\n      length: newNumSections\n    }, (_, index) => `Section ${index + 1}`));\n  };\n  const setManualWinner = () => {\n    const pointerAngle = 360 / numSections * winnerIndex;\n    rouletteRef.current.style.transition = 'transform 0.5s ease-out';\n    rouletteRef.current.style.transform = `rotate(${3600 + pointerAngle}deg)`; // On fait tourner la roulette 10 tours\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Nombre de sections :\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: numSections,\n        onChange: handleNumSectionsChange,\n        min: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: setManualWinner,\n      children: \"D\\xE9finir gagnant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roulette-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pointer\",\n        ref: pointerRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roulette\",\n        ref: rouletteRef,\n        children: sections.map((section, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `section ${winnerIndex === index ? 'winner' : ''}`,\n          children: section\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nERfA87KIXD+ASA9lJGw2RzUo4Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","App","_s","numSections","setNumSections","sections","setSections","Array","from","length","_","index","winnerIndex","setWinnerIndex","rouletteRef","pointerRef","handleNumSectionsChange","e","newNumSections","parseInt","target","value","setManualWinner","pointerAngle","current","style","transition","transform","className","children","type","onChange","min","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","map","section","_c","$RefreshReg$"],"sources":["C:/Users/gaspa/OneDrive/Documents/MMI 2/S4/React/SpinningWheel/spin-wheel/src/components/SpinWheel.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport './css/wheel.css';\r\n\r\nfunction App() {\r\n  const [numSections, setNumSections] = useState(4); // Nombre de sections par défaut\r\n  const [sections, setSections] = useState(Array.from({ length: numSections }, (_, index) => `Section ${index + 1}`));\r\n  const [winnerIndex, setWinnerIndex] = useState(0);\r\n  const rouletteRef = useRef(null);\r\n  const pointerRef = useRef(null);\r\n\r\n  const handleNumSectionsChange = (e) => {\r\n    const newNumSections = parseInt(e.target.value, 10);\r\n    setNumSections(newNumSections);\r\n    setSections(Array.from({ length: newNumSections }, (_, index) => `Section ${index + 1}`));\r\n  };\r\n\r\n  const setManualWinner = () => {\r\n    const pointerAngle = (360 / numSections) * winnerIndex;\r\n    rouletteRef.current.style.transition = 'transform 0.5s ease-out';\r\n    rouletteRef.current.style.transform = `rotate(${3600 + pointerAngle}deg)`; // On fait tourner la roulette 10 tours\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <label>\r\n        Nombre de sections :\r\n        <input type=\"number\" value={numSections} onChange={handleNumSectionsChange} min=\"1\" />\r\n      </label>\r\n      <button onClick={setManualWinner}>Définir gagnant</button>\r\n\r\n      <div className=\"roulette-container\">\r\n        <div className=\"pointer\" ref={pointerRef}></div>\r\n        <div className=\"roulette\" ref={rouletteRef}>\r\n          {sections.map((section, index) => (\r\n            <div key={index} className={`section ${winnerIndex === index ? 'winner' : ''}`}>\r\n              {section}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}