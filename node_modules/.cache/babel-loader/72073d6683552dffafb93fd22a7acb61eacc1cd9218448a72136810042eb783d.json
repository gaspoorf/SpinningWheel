{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaspa\\\\OneDrive\\\\Documents\\\\MMI 2\\\\S4\\\\React\\\\SpinningWheel\\\\spin-wheel\\\\src\\\\components\\\\SpinWheel.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./css/wheel.css\";\nimport WheelComponent from \"react-wheel-of-prizes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [segments, setSegments] = useState([{\n    name: \"\",\n    color: \"#EE4040\"\n  }, {\n    name: \"\",\n    color: \"#F0CF50\"\n  }]);\n  const [newSegment, setNewSegment] = useState(\"\");\n  const addSegment = () => {\n    if (newSegment.trim() !== \"\") {\n      const newColor = `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n      setSegments([...segments, {\n        name: newSegment,\n        color: newColor\n      }]);\n      setNewSegment(\"\");\n    }\n  };\n  const removeSegment = indexToRemove => {\n    setSegments(segments.filter((_, index) => index !== indexToRemove));\n  };\n  const onFinished = winner => {\n    console.log(winner);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello CodeSandbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(WheelComponent, {\n        segments: segments.map(segment => segment.name),\n        segColors: segments.map(segment => segment.color),\n        onFinished: winner => onFinished(winner),\n        primaryColor: \"black\",\n        contrastColor: \"white\",\n        buttonText: \"Spin\",\n        isOnlyOnce: false,\n        size: 190,\n        upDuration: 500,\n        downDuration: 600,\n        fontFamily: \"Arial\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newSegment,\n          onChange: e => setNewSegment(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addSegment,\n          children: \"Add Segment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: segments.map((segment, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: segment.name,\n            onChange: e => {\n              const newSegments = [...segments];\n              newSegments[index].name = e.target.value;\n              setSegments(newSegments);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), index > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeSegment(index),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Start editing to see some magic happen!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xSAEf+2CYYFGVUc7cZwj8p2NQHg=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","WheelComponent","jsxDEV","_jsxDEV","App","_s","segments","setSegments","name","color","newSegment","setNewSegment","addSegment","trim","newColor","Math","floor","random","toString","removeSegment","indexToRemove","filter","_","index","onFinished","winner","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","segment","segColors","primaryColor","contrastColor","buttonText","isOnlyOnce","size","upDuration","downDuration","fontFamily","type","value","onChange","e","target","onClick","newSegments","_c","$RefreshReg$"],"sources":["C:/Users/gaspa/OneDrive/Documents/MMI 2/S4/React/SpinningWheel/spin-wheel/src/components/SpinWheel.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport \"./css/wheel.css\";\r\nimport WheelComponent from \"react-wheel-of-prizes\";\r\n\r\nexport default function App() {\r\n  const [segments, setSegments] = useState([\r\n    { name: \"\", color: \"#EE4040\" },\r\n    { name: \"\", color: \"#F0CF50\" }\r\n  ]);\r\n  const [newSegment, setNewSegment] = useState(\"\");\r\n\r\n  const addSegment = () => {\r\n    if (newSegment.trim() !== \"\") {\r\n      const newColor = `#${Math.floor(Math.random() * 16777215).toString(16)}`;\r\n      setSegments([...segments, { name: newSegment, color: newColor }]);\r\n      setNewSegment(\"\");\r\n    }\r\n  };\r\n\r\n  const removeSegment = (indexToRemove) => {\r\n    setSegments(segments.filter((_, index) => index !== indexToRemove));\r\n  };\r\n\r\n  const onFinished = (winner) => {\r\n    console.log(winner);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Hello CodeSandbox</h1>\r\n      <div>\r\n        <WheelComponent\r\n          segments={segments.map((segment) => segment.name)}\r\n          segColors={segments.map((segment) => segment.color)}\r\n          onFinished={(winner) => onFinished(winner)}\r\n          primaryColor=\"black\"\r\n          contrastColor=\"white\"\r\n          buttonText=\"Spin\"\r\n          isOnlyOnce={false}\r\n          size={190}\r\n          upDuration={500}\r\n          downDuration={600}\r\n          fontFamily=\"Arial\"\r\n        />\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            value={newSegment}\r\n            onChange={(e) => setNewSegment(e.target.value)}\r\n          />\r\n          <button onClick={addSegment}>Add Segment</button>\r\n        </div>\r\n        <ul>\r\n          {segments.map((segment, index) => (\r\n            <li key={index}>\r\n              <input\r\n                type=\"text\"\r\n                value={segment.name}\r\n                onChange={(e) => {\r\n                  const newSegments = [...segments];\r\n                  newSegments[index].name = e.target.value;\r\n                  setSegments(newSegments);\r\n                }}\r\n              />\r\n              {index > 1 && (\r\n                <button onClick={() => removeSegment(index)}>Remove</button>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <h2>Start editing to see some magic happen!</h2>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}