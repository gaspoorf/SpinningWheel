{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaspa\\\\OneDrive\\\\Documents\\\\MMI 2\\\\S4\\\\React\\\\SpinningWheel\\\\spin-wheel\\\\src\\\\components\\\\SpinWheel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport SAT from 'sat'; // Assurez-vous d'installer cette bibliothèque avec npm install sat\nimport './css/wheel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [results, setResults] = useState(['Section 1', 'Section 2']);\n  const [selectedResult, setSelectedResult] = useState(null);\n  const [spinning, setSpinning] = useState(false);\n  const [customResult, setCustomResult] = useState('');\n  const wheelRef = useRef(null);\n  const triangleRef = useRef(null);\n  useEffect(() => {\n    results.forEach((_, index) => {\n      const widthDeLaSection = 50;\n      const heightDeLaSection = 50;\n      const wheelCenterX = wheelRef.current.getBoundingClientRect().left + wheelRef.current.getBoundingClientRect().width / 2;\n      const wheelCenterY = wheelRef.current.getBoundingClientRect().top + wheelRef.current.getBoundingClientRect().height / 2;\n      const section = new SAT.Box(new SAT.Vector(wheelCenterX, wheelCenterY), widthDeLaSection, heightDeLaSection).toPolygon();\n      section.userData = {\n        sectionIndex: index\n      };\n    });\n  }, [results, wheelRef]);\n  const handleCustomResultChange = event => {\n    setCustomResult(event.target.value);\n  };\n  const setCustomResultText = () => {\n    if (customResult.trim() !== '') {\n      setResults([...results, customResult]);\n      setCustomResult('');\n    } else {\n      alert('Veuillez saisir du texte.');\n    }\n  };\n  const handleStartSpin = () => {\n    const triangleRect = triangleRef.current.getBoundingClientRect();\n    const trianglePoint = new SAT.Vector(triangleRect.left + triangleRect.width / 2, triangleRect.top);\n    results.forEach((_, index) => {\n      const widthDeLaSection = 50;\n      const heightDeLaSection = 50;\n      const wheelCenterX = wheelRef.current.getBoundingClientRect().left + wheelRef.current.getBoundingClientRect().width / 2;\n      const wheelCenterY = wheelRef.current.getBoundingClientRect().top + wheelRef.current.getBoundingClientRect().height / 2;\n      const section = new SAT.Box(new SAT.Vector(wheelCenterX, wheelCenterY), widthDeLaSection, heightDeLaSection).toPolygon();\n      section.userData = {\n        sectionIndex: index\n      };\n      const collided = SAT.pointInPolygon(trianglePoint, section);\n      if (collided) {\n        setSelectedResult(index);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Roulette Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `roulette ${spinning ? 'spinning' : ''}`,\n      ref: wheelRef,\n      children: [results.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `segment ${selectedResult === index ? 'selected' : ''}`,\n        children: result\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"needle\",\n        ref: triangleRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-result-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nouveau r\\xE9sultat\",\n        value: customResult,\n        onChange: handleCustomResultChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: setCustomResultText,\n        children: \"Ajouter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartSpin,\n      disabled: spinning,\n      children: \"Lancer la roulette\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"X5UvHtMHnVa6t5yL3rsG007SRxQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","SAT","jsxDEV","_jsxDEV","App","_s","results","setResults","selectedResult","setSelectedResult","spinning","setSpinning","customResult","setCustomResult","wheelRef","triangleRef","forEach","_","index","widthDeLaSection","heightDeLaSection","wheelCenterX","current","getBoundingClientRect","left","width","wheelCenterY","top","height","section","Box","Vector","toPolygon","userData","sectionIndex","handleCustomResultChange","event","target","value","setCustomResultText","trim","alert","handleStartSpin","triangleRect","trianglePoint","collided","pointInPolygon","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","result","type","placeholder","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/gaspa/OneDrive/Documents/MMI 2/S4/React/SpinningWheel/spin-wheel/src/components/SpinWheel.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport SAT from 'sat'; // Assurez-vous d'installer cette bibliothèque avec npm install sat\r\nimport './css/wheel.css';\r\n\r\nconst App = () => {\r\n  const [results, setResults] = useState(['Section 1', 'Section 2']);\r\n  const [selectedResult, setSelectedResult] = useState(null);\r\n  const [spinning, setSpinning] = useState(false);\r\n  const [customResult, setCustomResult] = useState('');\r\n  const wheelRef = useRef(null);\r\n  const triangleRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    results.forEach((_, index) => {\r\n      const widthDeLaSection = 50;\r\n      const heightDeLaSection = 50;\r\n      const wheelCenterX = wheelRef.current.getBoundingClientRect().left + wheelRef.current.getBoundingClientRect().width / 2;\r\n      const wheelCenterY = wheelRef.current.getBoundingClientRect().top + wheelRef.current.getBoundingClientRect().height / 2;\r\n\r\n      const section = new SAT.Box(new SAT.Vector(wheelCenterX, wheelCenterY), widthDeLaSection, heightDeLaSection).toPolygon();\r\n      section.userData = { sectionIndex: index };\r\n    });\r\n  }, [results, wheelRef]);\r\n\r\n  const handleCustomResultChange = (event) => {\r\n    setCustomResult(event.target.value);\r\n  };\r\n\r\n  const setCustomResultText = () => {\r\n    if (customResult.trim() !== '') {\r\n      setResults([...results, customResult]);\r\n      setCustomResult('');\r\n    } else {\r\n      alert('Veuillez saisir du texte.');\r\n    }\r\n  };\r\n\r\n  const handleStartSpin = () => {\r\n    const triangleRect = triangleRef.current.getBoundingClientRect();\r\n    const trianglePoint = new SAT.Vector(triangleRect.left + triangleRect.width / 2, triangleRect.top);\r\n\r\n    results.forEach((_, index) => {\r\n      const widthDeLaSection = 50;\r\n      const heightDeLaSection = 50;\r\n      const wheelCenterX = wheelRef.current.getBoundingClientRect().left + wheelRef.current.getBoundingClientRect().width / 2;\r\n      const wheelCenterY = wheelRef.current.getBoundingClientRect().top + wheelRef.current.getBoundingClientRect().height / 2;\r\n\r\n      const section = new SAT.Box(new SAT.Vector(wheelCenterX, wheelCenterY), widthDeLaSection, heightDeLaSection).toPolygon();\r\n      section.userData = { sectionIndex: index };\r\n\r\n      const collided = SAT.pointInPolygon(trianglePoint, section);\r\n\r\n      if (collided) {\r\n        setSelectedResult(index);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Roulette Game</h1>\r\n      <div className={`roulette ${spinning ? 'spinning' : ''}`} ref={wheelRef}>\r\n        {results.map((result, index) => (\r\n          <div key={index} className={`segment ${selectedResult === index ? 'selected' : ''}`}>\r\n            {result}\r\n          </div>\r\n        ))}\r\n        <div className=\"needle\" ref={triangleRef}></div>\r\n      </div>\r\n      <div className=\"custom-result-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Nouveau résultat\"\r\n          value={customResult}\r\n          onChange={handleCustomResultChange}\r\n        />\r\n        <button onClick={setCustomResultText}>Ajouter</button>\r\n      </div>\r\n      <button onClick={handleStartSpin} disabled={spinning}>\r\n        Lancer la roulette\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}