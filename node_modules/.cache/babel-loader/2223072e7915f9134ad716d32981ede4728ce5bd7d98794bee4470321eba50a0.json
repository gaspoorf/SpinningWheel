{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaspa\\\\OneDrive\\\\Documents\\\\MMI 2\\\\S4\\\\React\\\\SpinningWheel\\\\spin-wheel\\\\src\\\\components\\\\SpinWheel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './css/wheel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst triangle = /*#__PURE__*/_jsxDEV(\"polygon\", {\n  points: \"50,5 55,-5 45,-5\",\n  fill: \"yellow\",\n  stroke: \"black\",\n  strokeWidth: \"1\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 3\n}, this);\nconst Wheel = () => {\n  _s();\n  const [fields, setFields] = useState([{\n    id: 1,\n    name: 'Section 1',\n    color: 'lightgreen'\n  }, {\n    id: 2,\n    name: 'Section 2',\n    color: 'lightblue'\n  }]);\n  const [result, setResult] = useState(null);\n  const wheelRef = useRef(null);\n  const triangleRef = useRef(null);\n  const handleAddField = () => {\n    const newColor = fields.length % 2 === 0 ? 'lightgreen' : 'lightblue';\n    const newField = {\n      id: fields.length + 1,\n      name: `Section ${fields.length + 1}`,\n      color: newColor\n    };\n    setFields(prevFields => [...prevFields, newField]);\n  };\n  const handleRemoveField = () => {\n    if (fields.length > 1) {\n      setFields(prevFields => prevFields.slice(0, -1));\n    }\n  };\n  const handleFieldNameChange = (id, value) => {\n    setFields(prevFields => prevFields.map(field => field.id === id ? {\n      ...field,\n      name: value\n    } : field));\n  };\n  const detectSectionUnderTriangle = () => {\n    const wheelRect = wheelRef.current.getBoundingClientRect();\n    const triangleRect = triangleRef.current.getBoundingClientRect();\n    const triangleCenterX = triangleRect.left + triangleRect.width / 2 - wheelRect.left;\n    const triangleCenterY = triangleRect.top + triangleRect.height / 2 - wheelRect.top;\n    const angle = Math.atan2(triangleCenterY, triangleCenterX) * (180 / Math.PI);\n    const normalizedAngle = (angle + 360) % 360;\n    const totalFields = fields.length;\n    const sectionAngle = 360 / totalFields;\n    const selectedSectionIndex = Math.floor(normalizedAngle / sectionAngle);\n    setResult(selectedSectionIndex !== null ? selectedSectionIndex : 0);\n  };\n  const calculatePath = index => {\n    const totalFields = fields.length;\n    const angle = 360 / totalFields * index;\n    const startAngle = angle;\n    const endAngle = angle + 360 / totalFields;\n    const radius = 50;\n    const startX = 50 + radius * Math.cos(startAngle * Math.PI / 180);\n    const startY = 50 + radius * Math.sin(startAngle * Math.PI / 180);\n    const endX = 50 + radius * Math.cos(endAngle * Math.PI / 180);\n    const endY = 50 + radius * Math.sin(endAngle * Math.PI / 180);\n    const largeArcFlag = endAngle - startAngle <= 180 ? 0 : 1;\n    const color = fields[index].color;\n    const textX = 50 + radius * 0.8 * Math.cos((startAngle + endAngle) / 2 * (Math.PI / 180));\n    const textY = 50 + radius * 0.8 * Math.sin((startAngle + endAngle) / 2 * (Math.PI / 180));\n    return /*#__PURE__*/_jsxDEV(\"g\", {\n      children: [/*#__PURE__*/_jsxDEV(\"path\", {\n        d: `M50 50 L${startX} ${startY} A${radius} ${radius} 0 ${largeArcFlag} 1 ${endX} ${endY} Z`,\n        fill: color,\n        stroke: \"black\",\n        strokeWidth: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: textX,\n        y: textY,\n        fontSize: \"5\",\n        textAnchor: \"middle\",\n        fill: \"black\",\n        children: fields[index].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wheel-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Wheel Spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wheel\",\n      ref: wheelRef,\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        viewBox: \"0 0 100 100\",\n        width: \"200\",\n        height: \"200\",\n        children: [fields.map((_, index) => calculatePath(index)), /*#__PURE__*/_jsxDEV(\"g\", {\n          ref: triangleRef,\n          transform: `translate(50, 5)`,\n          onMouseOver: detectSectionUnderTriangle,\n          children: triangle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fields-container\",\n      children: fields.map(field => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: `Champ ${field.id}`,\n        value: field.name,\n        onChange: e => handleFieldNameChange(field.id, e.target.value)\n      }, field.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddField,\n      children: \"Ajouter un champ\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRemoveField,\n      disabled: fields.length < 2,\n      children: \"Supprimer un champ\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), result !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"R\\xE9sultat: \", fields[result].name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(Wheel, \"zFteJ5D/8w6Mk7JY5wmMiFVUXS8=\");\n_c = Wheel;\nexport default Wheel;\nvar _c;\n$RefreshReg$(_c, \"Wheel\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","triangle","points","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","Wheel","_s","fields","setFields","id","name","color","result","setResult","wheelRef","triangleRef","handleAddField","newColor","length","newField","prevFields","handleRemoveField","slice","handleFieldNameChange","value","map","field","detectSectionUnderTriangle","wheelRect","current","getBoundingClientRect","triangleRect","triangleCenterX","left","width","triangleCenterY","top","height","angle","Math","atan2","PI","normalizedAngle","totalFields","sectionAngle","selectedSectionIndex","floor","calculatePath","index","startAngle","endAngle","radius","startX","cos","startY","sin","endX","endY","largeArcFlag","textX","textY","children","d","x","y","fontSize","textAnchor","className","ref","viewBox","_","transform","onMouseOver","type","placeholder","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/gaspa/OneDrive/Documents/MMI 2/S4/React/SpinningWheel/spin-wheel/src/components/SpinWheel.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport './css/wheel.css';\r\n\r\nconst triangle = (\r\n  <polygon\r\n    points=\"50,5 55,-5 45,-5\"\r\n    fill=\"yellow\"\r\n    stroke=\"black\"\r\n    strokeWidth=\"1\"\r\n  />\r\n);\r\n\r\nconst Wheel = () => {\r\n  const [fields, setFields] = useState([\r\n    { id: 1, name: 'Section 1', color: 'lightgreen' },\r\n    { id: 2, name: 'Section 2', color: 'lightblue' },\r\n  ]);\r\n  const [result, setResult] = useState(null);\r\n\r\n  const wheelRef = useRef(null);\r\n  const triangleRef = useRef(null);\r\n\r\n  const handleAddField = () => {\r\n    const newColor = fields.length % 2 === 0 ? 'lightgreen' : 'lightblue';\r\n    const newField = { id: fields.length + 1, name: `Section ${fields.length + 1}`, color: newColor };\r\n    setFields((prevFields) => [...prevFields, newField]);\r\n  };\r\n\r\n  const handleRemoveField = () => {\r\n    if (fields.length > 1) {\r\n      setFields((prevFields) => prevFields.slice(0, -1));\r\n    }\r\n  };\r\n\r\n  const handleFieldNameChange = (id, value) => {\r\n    setFields((prevFields) =>\r\n      prevFields.map((field) => (field.id === id ? { ...field, name: value } : field))\r\n    );\r\n  };\r\n\r\n  const detectSectionUnderTriangle = () => {\r\n    const wheelRect = wheelRef.current.getBoundingClientRect();\r\n    const triangleRect = triangleRef.current.getBoundingClientRect();\r\n\r\n    const triangleCenterX = triangleRect.left + triangleRect.width / 2 - wheelRect.left;\r\n    const triangleCenterY = triangleRect.top + triangleRect.height / 2 - wheelRect.top;\r\n\r\n    const angle = Math.atan2(triangleCenterY, triangleCenterX) * (180 / Math.PI);\r\n    const normalizedAngle = (angle + 360) % 360;\r\n\r\n    const totalFields = fields.length;\r\n    const sectionAngle = 360 / totalFields;\r\n    const selectedSectionIndex = Math.floor(normalizedAngle / sectionAngle);\r\n\r\n    setResult(selectedSectionIndex !== null ? selectedSectionIndex : 0);\r\n  };\r\n\r\n  const calculatePath = (index) => {\r\n    const totalFields = fields.length;\r\n    const angle = (360 / totalFields) * index;\r\n    const startAngle = angle;\r\n    const endAngle = angle + (360 / totalFields);\r\n\r\n    const radius = 50;\r\n\r\n    const startX = 50 + radius * Math.cos((startAngle * Math.PI) / 180);\r\n    const startY = 50 + radius * Math.sin((startAngle * Math.PI) / 180);\r\n    const endX = 50 + radius * Math.cos((endAngle * Math.PI) / 180);\r\n    const endY = 50 + radius * Math.sin((endAngle * Math.PI) / 180);\r\n\r\n    const largeArcFlag = endAngle - startAngle <= 180 ? 0 : 1;\r\n    const color = fields[index].color;\r\n\r\n    const textX = 50 + radius * 0.8 * Math.cos(((startAngle + endAngle) / 2) * (Math.PI / 180));\r\n    const textY = 50 + radius * 0.8 * Math.sin(((startAngle + endAngle) / 2) * (Math.PI / 180));\r\n\r\n    return (\r\n      <g key={index}>\r\n        <path\r\n          d={`M50 50 L${startX} ${startY} A${radius} ${radius} 0 ${largeArcFlag} 1 ${endX} ${endY} Z`}\r\n          fill={color}\r\n          stroke=\"black\"\r\n          strokeWidth=\"1\"\r\n        />\r\n        <text x={textX} y={textY} fontSize=\"5\" textAnchor=\"middle\" fill=\"black\">\r\n          {fields[index].name}\r\n        </text>\r\n      </g>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"wheel-container\">\r\n      <h2>Wheel Spinner</h2>\r\n      <div className=\"wheel\" ref={wheelRef}>\r\n        <svg viewBox=\"0 0 100 100\" width=\"200\" height=\"200\">\r\n          {fields.map((_, index) => calculatePath(index))}\r\n          <g ref={triangleRef} transform={`translate(50, 5)`} onMouseOver={detectSectionUnderTriangle}>\r\n            {triangle}\r\n          </g>\r\n        </svg>\r\n      </div>\r\n\r\n      <div className=\"fields-container\">\r\n        {fields.map((field) => (\r\n          <input\r\n            key={field.id}\r\n            type=\"text\"\r\n            placeholder={`Champ ${field.id}`}\r\n            value={field.name}\r\n            onChange={(e) => handleFieldNameChange(field.id, e.target.value)}\r\n          />\r\n        ))}\r\n      </div>\r\n      <button onClick={handleAddField}>Ajouter un champ</button>\r\n      <button onClick={handleRemoveField} disabled={fields.length < 2}>\r\n        Supprimer un champ\r\n      </button>\r\n      {result !== null && <p>Résultat: {fields[result].name}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wheel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}