{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaspa\\\\OneDrive\\\\Documents\\\\MMI 2\\\\S4\\\\React\\\\SpinningWheel\\\\spin-wheel\\\\src\\\\components\\\\SpinWheel.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/App.js\nimport React, { useState } from 'react';\nimport './css/wheel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Roulette = ({\n  numSections,\n  onSpin\n}) => {\n  _s();\n  const [rotationAngle, setRotationAngle] = useState(0);\n  const spinRoulette = () => {\n    const randomAngle = Math.floor(Math.random() * 360);\n    setRotationAngle(randomAngle);\n    onSpin(randomAngle);\n  };\n  const sectionStyle = index => {\n    const sectionAngle = 360 / numSections;\n    const rotateAngle = index * sectionAngle;\n    const backgroundColor = `hsl(${rotateAngle}, 70%, 70%)`; // Utilisation de HSL pour avoir des couleurs différentes\n\n    return {\n      transform: `rotate(${rotateAngle}deg)`,\n      backgroundColor: backgroundColor\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"roulette-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roulette\",\n      style: {\n        transform: `rotate(${rotationAngle}deg)`\n      },\n      children: [...Array(numSections)].map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roulette-section\",\n        style: sectionStyle(index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: spinRoulette,\n      children: \"Tourner la roulette\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Roulette, \"i0tayar9SZCJDGrN9JqVUKSsLas=\");\n_c = Roulette;\nconst Cursor = ({\n  angle\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"cursor\",\n  style: {\n    transform: `rotate(${angle}deg)`\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 40,\n  columnNumber: 3\n}, this);\n_c2 = Cursor;\nfunction App() {\n  _s2();\n  const numSections = 4; // Vous pouvez ajuster le nombre de sections selon vos besoins\n  const [cursorAngle, setCursorAngle] = useState(0);\n  const handleSpin = angle => {\n    setCursorAngle(angle);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Roulette, {\n      numSections: numSections,\n      onSpin: handleSpin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cursor, {\n      angle: cursorAngle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"vuFq8lrKMDef0g7mI5HkJsMK0hM=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Roulette\");\n$RefreshReg$(_c2, \"Cursor\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Roulette","numSections","onSpin","_s","rotationAngle","setRotationAngle","spinRoulette","randomAngle","Math","floor","random","sectionStyle","index","sectionAngle","rotateAngle","backgroundColor","transform","className","children","style","Array","map","_","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","Cursor","angle","_c2","App","_s2","cursorAngle","setCursorAngle","handleSpin","_c3","$RefreshReg$"],"sources":["C:/Users/gaspa/OneDrive/Documents/MMI 2/S4/React/SpinningWheel/spin-wheel/src/components/SpinWheel.jsx"],"sourcesContent":["// src/App.js\r\nimport React, { useState } from 'react';\r\nimport './css/wheel.css';\r\n\r\nconst Roulette = ({ numSections, onSpin }) => {\r\n  const [rotationAngle, setRotationAngle] = useState(0);\r\n\r\n  const spinRoulette = () => {\r\n    const randomAngle = Math.floor(Math.random() * 360);\r\n    setRotationAngle(randomAngle);\r\n    onSpin(randomAngle);\r\n  };\r\n\r\n  const sectionStyle = (index) => {\r\n    const sectionAngle = 360 / numSections;\r\n    const rotateAngle = index * sectionAngle;\r\n    const backgroundColor = `hsl(${rotateAngle}, 70%, 70%)`; // Utilisation de HSL pour avoir des couleurs différentes\r\n\r\n    return {\r\n      transform: `rotate(${rotateAngle}deg)`,\r\n      backgroundColor: backgroundColor,\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"roulette-container\">\r\n      <div className=\"roulette\" style={{ transform: `rotate(${rotationAngle}deg)` }}>\r\n        {[...Array(numSections)].map((_, index) => (\r\n          <div key={index} className=\"roulette-section\" style={sectionStyle(index)}>\r\n            {/* Ajoutez le contenu de chaque section ici */}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <button onClick={spinRoulette}>Tourner la roulette</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Cursor = ({ angle }) => (\r\n  <div className=\"cursor\" style={{ transform: `rotate(${angle}deg)` }}>\r\n    {/* Style et contenu du curseur ici */}\r\n  </div>\r\n);\r\n\r\nfunction App() {\r\n  const numSections = 4; // Vous pouvez ajuster le nombre de sections selon vos besoins\r\n  const [cursorAngle, setCursorAngle] = useState(0);\r\n\r\n  const handleSpin = (angle) => {\r\n    setCursorAngle(angle);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Roulette numSections={numSections} onSpin={handleSpin} />\r\n      <Cursor angle={cursorAngle} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}