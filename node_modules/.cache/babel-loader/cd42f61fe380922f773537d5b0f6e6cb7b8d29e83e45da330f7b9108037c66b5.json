{"ast":null,"code":"import React,{useEffect,useState,useRef}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";const WheelComponent=_ref=>{let{segments,segColors,winningSegment,onFinished,primaryColor=\"black\",contrastColor=\"white\",buttonText=\"Spin\",isOnlyOnce=true,size=window.innerWidth,upDuration=100,downDuration=1000,fontFamily=\"proxima-nova\"}=_ref;const randomString=()=>{const chars=\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz\".split(\"\");const length=8;let str=\"\";for(let i=0;i<length;i++){str+=chars[Math.floor(Math.random()*chars.length)];}return str;};const canvasId=useRef(\"canvas-\".concat(randomString()));const wheelId=useRef(\"wheel-\".concat(randomString()));const dimension=(size+20)*2;let currentSegment=\"\";let isStarted=false;const[isFinished,setFinished]=useState(false);let timerHandle=0;const timerDelay=segments.length;let angleCurrent=0;let angleDelta=0;let canvasContext=null;let maxSpeed=Math.PI/segments.length;const upTime=segments.length*upDuration;const downTime=segments.length*downDuration;let spinStart=0;let frames=0;const centerX=size+20;const centerY=size+20;useEffect(()=>{wheelInit();setTimeout(()=>{window.scrollTo(0,1);},0);},[]);const wheelInit=()=>{initCanvas();wheelDraw();};const initCanvas=()=>{let canvas=document.getElementById(canvasId.current);if(!canvas){var _document$getElementB;canvas=document.createElement(\"canvas\");canvas.setAttribute(\"id\",canvasId.current);(_document$getElementB=document.getElementById(wheelId.current))===null||_document$getElementB===void 0?void 0:_document$getElementB.appendChild(canvas);}canvas.width=dimension;canvas.height=dimension;canvas.addEventListener(\"click\",spin,false);canvasContext=canvas.getContext(\"2d\");// Set canvas resolution to match device pixel ratio\nconst devicePixelRatio=window.devicePixelRatio||1;const backingStoreRatio=canvasContext.webkitBackingStorePixelRatio||canvasContext.mozBackingStorePixelRatio||canvasContext.msBackingStorePixelRatio||canvasContext.oBackingStorePixelRatio||canvasContext.backingStorePixelRatio||1;const ratio=devicePixelRatio/backingStoreRatio;if(devicePixelRatio!==backingStoreRatio){const oldWidth=canvas.width;const oldHeight=canvas.height;canvas.width=oldWidth*ratio;canvas.height=oldHeight*ratio;canvas.style.width=oldWidth+'px';canvas.style.height=oldHeight+'px';canvasContext.scale(ratio,ratio);}};const spin=()=>{isStarted=true;if(timerHandle===0){spinStart=new Date().getTime();maxSpeed=Math.PI/segments.length;frames=0;timerHandle=setInterval(onTimerTick,timerDelay);}};const onTimerTick=()=>{frames++;draw();const duration=new Date().getTime()-spinStart;let progress=0;let finished=false;if(duration<upTime){progress=duration/upTime;angleDelta=maxSpeed*Math.sin(progress*Math.PI/2);}else{if(winningSegment){if(currentSegment===winningSegment&&frames>segments.length){progress=duration/upTime;angleDelta=maxSpeed*Math.sin(progress*Math.PI/2+Math.PI/2);progress=1;}else{progress=duration/downTime;angleDelta=maxSpeed*Math.sin(progress*Math.PI/2+Math.PI/2);}}else{progress=duration/downTime;angleDelta=maxSpeed*Math.sin(progress*Math.PI/2+Math.PI/2);}if(progress>=1)finished=true;}angleCurrent+=angleDelta;while(angleCurrent>=Math.PI*2)angleCurrent-=Math.PI*2;if(finished){setFinished(true);onFinished(currentSegment);clearInterval(timerHandle);timerHandle=0;angleDelta=0;}};const wheelDraw=()=>{clear();drawWheel();drawNeedle();};const draw=()=>{clear();drawWheel();drawNeedle();};const drawSegment=(key,lastAngle,angle)=>{if(!canvasContext){return false;}const ctx=canvasContext;const value=segments[key];ctx.save();ctx.beginPath();ctx.moveTo(centerX,centerY);ctx.arc(centerX,centerY,size,lastAngle,angle,false);ctx.lineTo(centerX,centerY);ctx.closePath();ctx.fillStyle=segColors[key];ctx.fill();ctx.stroke();ctx.save();ctx.translate(centerX,centerY);ctx.rotate((lastAngle+angle)/2);ctx.fillStyle=contrastColor;ctx.font=\"bold 1em \"+fontFamily;ctx.fillText(value.substr(0,21),size/2+20,0);ctx.restore();};const drawWheel=()=>{if(!canvasContext){return false;}const ctx=canvasContext;let lastAngle=angleCurrent;const len=segments.length;const PI2=Math.PI*2;ctx.lineWidth=1;ctx.strokeStyle=primaryColor;ctx.textBaseline=\"middle\";ctx.textAlign=\"center\";ctx.font=\"1em \"+fontFamily;for(let i=1;i<=len;i++){const angle=PI2*(i/len)+angleCurrent;drawSegment(i-1,lastAngle,angle);lastAngle=angle;}// Draw a center circle\nctx.beginPath();ctx.arc(centerX,centerY,30,0,PI2,false);ctx.closePath();ctx.fillStyle=primaryColor;ctx.lineWidth=5;ctx.strokeStyle=contrastColor;ctx.fill();ctx.font=\"bold 1em \"+fontFamily;ctx.fillStyle=contrastColor;ctx.textAlign=\"center\";ctx.fillText(buttonText,centerX,centerY+3);ctx.stroke();// Draw outer circle\nctx.beginPath();ctx.arc(centerX,centerY,size,0,PI2,false);ctx.closePath();ctx.lineWidth=5;ctx.strokeStyle=primaryColor;ctx.stroke();};const drawNeedle=()=>{if(!canvasContext){return false;}const ctx=canvasContext;ctx.lineWidth=1;ctx.strokeStyle=contrastColor;ctx.fillStyle=contrastColor;ctx.beginPath();ctx.moveTo(centerX+10,centerY-27);ctx.lineTo(centerX-10,centerY-27);ctx.lineTo(centerX,centerY-45);ctx.closePath();ctx.fill();const change=angleCurrent+Math.PI/2;let i=segments.length-Math.floor(change/(Math.PI*2)*segments.length)-1;if(i<0)i=i+segments.length;ctx.textAlign=\"center\";ctx.textBaseline=\"middle\";ctx.fillStyle=primaryColor;ctx.font=\"bold 1.5em \"+fontFamily;currentSegment=segments[i];};const clear=()=>{if(!canvasContext){return false;}const ctx=canvasContext;ctx.clearRect(0,0,dimension,dimension);};return/*#__PURE__*/_jsx(\"div\",{id:wheelId.current,children:/*#__PURE__*/_jsx(\"canvas\",{id:canvasId.current,width:dimension,height:dimension,style:{pointerEvents:isFinished&&isOnlyOnce?\"none\":\"auto\"}})});};export default WheelComponent;","map":{"version":3,"names":["React","useEffect","useState","useRef","jsx","_jsx","WheelComponent","_ref","segments","segColors","winningSegment","onFinished","primaryColor","contrastColor","buttonText","isOnlyOnce","size","window","innerWidth","upDuration","downDuration","fontFamily","randomString","chars","split","length","str","i","Math","floor","random","canvasId","concat","wheelId","dimension","currentSegment","isStarted","isFinished","setFinished","timerHandle","timerDelay","angleCurrent","angleDelta","canvasContext","maxSpeed","PI","upTime","downTime","spinStart","frames","centerX","centerY","wheelInit","setTimeout","scrollTo","initCanvas","wheelDraw","canvas","document","getElementById","current","_document$getElementB","createElement","setAttribute","appendChild","width","height","addEventListener","spin","getContext","devicePixelRatio","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","ratio","oldWidth","oldHeight","style","scale","Date","getTime","setInterval","onTimerTick","draw","duration","progress","finished","sin","clearInterval","clear","drawWheel","drawNeedle","drawSegment","key","lastAngle","angle","ctx","value","save","beginPath","moveTo","arc","lineTo","closePath","fillStyle","fill","stroke","translate","rotate","font","fillText","substr","restore","len","PI2","lineWidth","strokeStyle","textBaseline","textAlign","change","clearRect","id","children","pointerEvents"],"sources":["C:/Users/gaspa/OneDrive/Documents/MMI 2/S4/React/SpinningWheel/spin-wheel/src/components/WheelConstructor.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\n\nconst WheelComponent = ({\n  segments,\n  segColors,\n  winningSegment,\n  onFinished,\n  primaryColor = \"black\",\n  contrastColor = \"white\",\n  buttonText = \"Spin\",\n  isOnlyOnce = true,\n  size = window.innerWidth,\n  upDuration = 100,\n  downDuration = 1000,\n  fontFamily = \"proxima-nova\",\n}) => {\n  const randomString = () => {\n    const chars = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz\".split(\n      \"\"\n    );\n    const length = 8;\n    let str = \"\";\n    for (let i = 0; i < length; i++) {\n      str += chars[Math.floor(Math.random() * chars.length)];\n    }\n    return str;\n  };\n  const canvasId = useRef(`canvas-${randomString()}`);\n  const wheelId = useRef(`wheel-${randomString()}`);\n  const dimension = (size + 20) * 2;\n  let currentSegment = \"\";\n  let isStarted = false;\n  const [isFinished, setFinished] = useState(false);\n  let timerHandle = 0;\n  const timerDelay = segments.length;\n  let angleCurrent = 0;\n  let angleDelta = 0;\n  let canvasContext = null;\n  let maxSpeed = Math.PI / segments.length;\n  const upTime = segments.length * upDuration;\n  const downTime = segments.length * downDuration;\n  let spinStart = 0;\n  let frames = 0;\n  const centerX = size + 20;\n  const centerY = size + 20;\n\n  useEffect(() => {\n    wheelInit();\n    setTimeout(() => {\n      window.scrollTo(0, 1);\n    }, 0);\n  }, []);\n\n  const wheelInit = () => {\n    initCanvas();\n    wheelDraw();\n  };\n\n  const initCanvas = () => {\n    let canvas = document.getElementById(canvasId.current);\n    if (!canvas) {\n      canvas = document.createElement(\"canvas\");\n      canvas.setAttribute(\"id\", canvasId.current);\n      document.getElementById(wheelId.current)?.appendChild(canvas);\n    }\n    canvas.width = dimension;\n    canvas.height = dimension;\n    canvas.addEventListener(\"click\", spin, false);\n    canvasContext = canvas.getContext(\"2d\");\n\n    // Set canvas resolution to match device pixel ratio\n    const devicePixelRatio = window.devicePixelRatio || 1;\n    const backingStoreRatio = canvasContext.webkitBackingStorePixelRatio ||\n                               canvasContext.mozBackingStorePixelRatio ||\n                               canvasContext.msBackingStorePixelRatio ||\n                               canvasContext.oBackingStorePixelRatio ||\n                               canvasContext.backingStorePixelRatio || 1;\n    const ratio = devicePixelRatio / backingStoreRatio;\n    if (devicePixelRatio !== backingStoreRatio) {\n      const oldWidth = canvas.width;\n      const oldHeight = canvas.height;\n      canvas.width = oldWidth * ratio;\n      canvas.height = oldHeight * ratio;\n      canvas.style.width = oldWidth + 'px';\n      canvas.style.height = oldHeight + 'px';\n      canvasContext.scale(ratio, ratio);\n    }\n  };\n\n  const spin = () => {\n    isStarted = true;\n    if (timerHandle === 0) {\n      spinStart = new Date().getTime();\n      maxSpeed = Math.PI / segments.length;\n      frames = 0;\n      timerHandle = setInterval(onTimerTick, timerDelay);\n    }\n  };\n\n  const onTimerTick = () => {\n    frames++;\n    draw();\n    const duration = new Date().getTime() - spinStart;\n    let progress = 0;\n    let finished = false;\n    if (duration < upTime) {\n      progress = duration / upTime;\n      angleDelta = maxSpeed * Math.sin((progress * Math.PI) / 2);\n    } else {\n      if (winningSegment) {\n        if (currentSegment === winningSegment && frames > segments.length) {\n          progress = duration / upTime;\n          angleDelta =\n            maxSpeed * Math.sin((progress * Math.PI) / 2 + Math.PI / 2);\n          progress = 1;\n        } else {\n          progress = duration / downTime;\n          angleDelta =\n            maxSpeed * Math.sin((progress * Math.PI) / 2 + Math.PI / 2);\n        }\n      } else {\n        progress = duration / downTime;\n        angleDelta =\n          maxSpeed * Math.sin((progress * Math.PI) / 2 + Math.PI / 2);\n      }\n      if (progress >= 1) finished = true;\n    }\n\n    angleCurrent += angleDelta;\n    while (angleCurrent >= Math.PI * 2) angleCurrent -= Math.PI * 2;\n    if (finished) {\n      setFinished(true);\n      onFinished(currentSegment);\n      clearInterval(timerHandle);\n      timerHandle = 0;\n      angleDelta = 0;\n    }\n  };\n\n  const wheelDraw = () => {\n    clear();\n    drawWheel();\n    drawNeedle();\n  };\n\n  const draw = () => {\n    clear();\n    drawWheel();\n    drawNeedle();\n  };\n\n  const drawSegment = (key, lastAngle, angle) => {\n    if (!canvasContext) {\n      return false;\n    }\n    const ctx = canvasContext;\n    const value = segments[key];\n    ctx.save();\n    ctx.beginPath();\n    ctx.moveTo(centerX, centerY);\n    ctx.arc(centerX, centerY, size, lastAngle, angle, false);\n    ctx.lineTo(centerX, centerY);\n    ctx.closePath();\n    ctx.fillStyle = segColors[key];\n    ctx.fill();\n    ctx.stroke();\n    ctx.save();\n    ctx.translate(centerX, centerY);\n    ctx.rotate((lastAngle + angle) / 2);\n    ctx.fillStyle = contrastColor;\n    ctx.font = \"bold 1em \" + fontFamily;\n    ctx.fillText(value.substr(0, 21), size / 2 + 20, 0);\n    ctx.restore();\n  };\n\n  const drawWheel = () => {\n    if (!canvasContext) {\n      return false;\n    }\n    const ctx = canvasContext;\n    let lastAngle = angleCurrent;\n    const len = segments.length;\n    const PI2 = Math.PI * 2;\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = primaryColor;\n    ctx.textBaseline = \"middle\";\n    ctx.textAlign = \"center\";\n    ctx.font = \"1em \" + fontFamily;\n    for (let i = 1; i <= len; i++) {\n      const angle = PI2 * (i / len) + angleCurrent;\n      drawSegment(i - 1, lastAngle, angle);\n      lastAngle = angle;\n    }\n\n    // Draw a center circle\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, 30, 0, PI2, false);\n    ctx.closePath();\n    ctx.fillStyle = primaryColor;\n    ctx.lineWidth = 5;\n    ctx.strokeStyle = contrastColor;\n    ctx.fill();\n    ctx.font = \"bold 1em \" + fontFamily;\n    ctx.fillStyle = contrastColor;\n    ctx.textAlign = \"center\";\n    ctx.fillText(buttonText, centerX, centerY + 3);\n    ctx.stroke();\n\n    // Draw outer circle\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, size, 0, PI2, false);\n    ctx.closePath();\n\n    ctx.lineWidth = 5;\n    ctx.strokeStyle = primaryColor;\n    ctx.stroke();\n  };\n\n  const drawNeedle = () => {\n    if (!canvasContext) {\n      return false;\n    }\n    const ctx = canvasContext;\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = contrastColor;\n    ctx.fillStyle = contrastColor;\n    ctx.beginPath();\n    ctx.moveTo(centerX + 10, centerY - 27);\n    ctx.lineTo(centerX - 10, centerY - 27);\n    ctx.lineTo(centerX, centerY - 45);\n    ctx.closePath();\n    ctx.fill();\n    const change = angleCurrent + Math.PI / 2;\n    let i =\n      segments.length -\n      Math.floor((change / (Math.PI * 2)) * segments.length) -\n      1;\n    if (i < 0) i = i + segments.length;\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"middle\";\n    ctx.fillStyle = primaryColor;\n    ctx.font = \"bold 1.5em \" + fontFamily;\n    currentSegment = segments[i];\n  };\n  const clear = () => {\n    if (!canvasContext) {\n      return false;\n    }\n    const ctx = canvasContext;\n    ctx.clearRect(0, 0, dimension, dimension);\n  };\n  return (\n    <div id={wheelId.current}>\n      <canvas\n        id={canvasId.current}\n        width={dimension}\n        height={dimension}\n        style={{\n          pointerEvents: isFinished && isOnlyOnce ? \"none\" : \"auto\",\n        }}\n      />\n    </div>\n  );\n};\nexport default WheelComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}