{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaspa\\\\OneDrive\\\\Documents\\\\MMI 2\\\\S4\\\\React\\\\SpinningWheel\\\\spin-wheel\\\\src\\\\components\\\\SpinWheel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useInView } from 'react-intersection-observer';\nimport './css/wheel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst triangle = /*#__PURE__*/_jsxDEV(\"polygon\", {\n  points: \"50,5 55,15 45,15\",\n  fill: \"yellow\",\n  stroke: \"black\",\n  strokeWidth: \"1\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\nconst Wheel = () => {\n  _s();\n  const [fields, setFields] = useState([{\n    id: 1,\n    name: '',\n    color: 'lightblue'\n  }]);\n  const [result, setResult] = useState(null);\n  const [selectedSection, setSelectedSection] = useState(null);\n  const [wheelRotation, setWheelRotation] = useState('');\n  const triangleRef = useRef(null);\n  const handleAddField = () => {\n    const newColor = fields.length % 2 === 0 ? 'lightgreen' : 'lightblue';\n    const newField = {\n      id: fields.length + 1,\n      name: '',\n      color: newColor\n    };\n    setFields(prevFields => [...prevFields, newField]);\n  };\n  const handleRemoveField = () => {\n    if (fields.length > 1) {\n      setFields(prevFields => prevFields.slice(0, -1));\n    }\n  };\n  const handleFieldNameChange = (id, value) => {\n    setFields(prevFields => prevFields.map(field => field.id === id ? {\n      ...field,\n      name: value\n    } : field));\n  };\n  const calculateRotation = elapsedTime => {\n    const easing = t => t * (2 - t);\n    const normalizedTime = elapsedTime / 2000; // totalDuration is fixed at 2000\n    const rotatedAngle = 1200 * easing(normalizedTime);\n    return `rotate(${rotatedAngle} 50 50)`;\n  };\n  const [triangleEntry] = useInView({\n    triggerOnce: true,\n    rootMargin: '0px 0px -50% 0px' // Adjust rootMargin as needed\n  });\n  const trianglePos = useRef({\n    x: 0,\n    y: 0\n  });\n  useEffect(() => {\n    if (triangleEntry) {\n      const rect = triangleRef.current.getBoundingClientRect();\n      trianglePos.current = {\n        x: rect.left + rect.width / 2,\n        y: rect.top + rect.height\n      };\n    }\n  }, [triangleEntry]);\n  const handleStartSpin = () => {\n    const initialDelay = 100;\n    const refreshInterval = 16;\n    setResult(null);\n    let startTime = null;\n    const spinAnimation = () => {\n      const currentTime = Date.now();\n      const elapsedTime = currentTime - startTime;\n      if (elapsedTime < 2000) {\n        const rotation = calculateRotation(elapsedTime);\n        setWheelRotation(rotation);\n        const sectionCenters = fields.map((_, index) => {\n          const angle = (index + 0.5) * (360 / fields.length);\n          const x = 50 + 30 * Math.cos(angle * Math.PI / 180);\n          const y = 50 + 30 * Math.sin(angle * Math.PI / 180);\n          return {\n            x,\n            y\n          };\n        });\n        const closestSection = sectionCenters.reduce((acc, curr) => Math.abs(curr.y - trianglePos.current.y) < Math.abs(acc.y - trianglePos.current.y) ? curr : acc);\n        const resultIndex = sectionCenters.findIndex(center => center.x === closestSection.x && center.y === closestSection.y);\n        if (resultIndex !== -1) {\n          setSelectedSection(resultIndex);\n        }\n      } else {\n        clearInterval(animationInterval);\n        const spinResult = selectedSection !== null ? selectedSection : 0;\n        setResult(spinResult);\n        setSelectedSection(spinResult);\n      }\n    };\n    startTime = Date.now();\n    setWheelRotation(calculateRotation(0));\n    const animationInterval = setInterval(spinAnimation, refreshInterval);\n    setTimeout(() => clearInterval(animationInterval), 2000 + initialDelay);\n  };\n  const calculatePath = index => {\n    const totalFields = fields.length;\n    const angle = 360 / totalFields;\n    const startAngle = index * angle;\n    const endAngle = startAngle + angle;\n    const radius = 50;\n    const startX = 50 + radius * Math.cos(startAngle * Math.PI / 180);\n    const startY = 50 + radius * Math.sin(startAngle * Math.PI / 180);\n    const endX = 50 + radius * Math.cos(endAngle * Math.PI / 180);\n    const endY = 50 + radius * Math.sin(endAngle * Math.PI / 180);\n    const largeArcFlag = angle > 180 ? 1 : 0;\n    const color = index % 2 === 0 ? 'blue' : 'red';\n    const textX = 50 + radius * 0.8 * Math.cos((startAngle + endAngle) / 2 * (Math.PI / 180));\n    const textY = 50 + radius * 0.8 * Math.sin((startAngle + endAngle) / 2 * (Math.PI / 180));\n    return {\n      path: /*#__PURE__*/_jsxDEV(\"path\", {\n        d: `M50 50 L${startX} ${startY} A${radius} ${radius} 0 ${largeArcFlag} 1 ${endX} ${endY} Z`,\n        fill: color,\n        stroke: \"black\",\n        strokeWidth: \"1\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this),\n      text: /*#__PURE__*/_jsxDEV(\"text\", {\n        x: textX,\n        y: textY,\n        fontSize: \"5\",\n        textAnchor: \"middle\",\n        fill: \"black\",\n        children: fields[index].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"roulette-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Wheel Spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wheel\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        viewBox: \"0 0 100 100\",\n        width: \"200\",\n        height: \"200\",\n        children: [/*#__PURE__*/_jsxDEV(\"g\", {\n          transform: wheelRotation,\n          children: fields.map((field, index) => {\n            const {\n              path,\n              text\n            } = calculatePath(index);\n            const isHighlighted = selectedSection !== null && index === selectedSection;\n            return /*#__PURE__*/_jsxDEV(\"g\", {\n              className: isHighlighted ? 'highlighted-section selected-indicator' : 'selected-indicator',\n              children: [path, text]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          ref: triangleRef,\n          ...triangleEntry,\n          children: triangle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fields-container\",\n      children: fields.map(field => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: `Champ ${field.id}`,\n        value: field.name,\n        onChange: e => handleFieldNameChange(field.id, e.target.value)\n      }, field.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddField,\n      children: \"Ajouter un champ\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRemoveField,\n      disabled: fields.length < 2,\n      children: \"Supprimer un champ\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartSpin,\n      disabled: fields.length < 2,\n      children: \"Lancer la roue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), result !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"R\\xE9sultat: \", fields[result].name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n_s(Wheel, \"zoi/zTnJFuadhp6M9xBCbctkngU=\", false, function () {\n  return [useInView];\n});\n_c = Wheel;\nexport default Wheel;\nvar _c;\n$RefreshReg$(_c, \"Wheel\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useInView","jsxDEV","_jsxDEV","triangle","points","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","Wheel","_s","fields","setFields","id","name","color","result","setResult","selectedSection","setSelectedSection","wheelRotation","setWheelRotation","triangleRef","handleAddField","newColor","length","newField","prevFields","handleRemoveField","slice","handleFieldNameChange","value","map","field","calculateRotation","elapsedTime","easing","t","normalizedTime","rotatedAngle","triangleEntry","triggerOnce","rootMargin","trianglePos","x","y","rect","current","getBoundingClientRect","left","width","top","height","handleStartSpin","initialDelay","refreshInterval","startTime","spinAnimation","currentTime","Date","now","rotation","sectionCenters","_","index","angle","Math","cos","PI","sin","closestSection","reduce","acc","curr","abs","resultIndex","findIndex","center","clearInterval","animationInterval","spinResult","setInterval","setTimeout","calculatePath","totalFields","startAngle","endAngle","radius","startX","startY","endX","endY","largeArcFlag","textX","textY","path","d","text","fontSize","textAnchor","children","className","viewBox","transform","isHighlighted","ref","type","placeholder","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/gaspa/OneDrive/Documents/MMI 2/S4/React/SpinningWheel/spin-wheel/src/components/SpinWheel.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useInView } from 'react-intersection-observer';\r\nimport './css/wheel.css';\r\n\r\nconst triangle = (\r\n  <polygon\r\n    points=\"50,5 55,15 45,15\"\r\n    fill=\"yellow\"\r\n    stroke=\"black\"\r\n    strokeWidth=\"1\"\r\n  />\r\n);\r\n\r\nconst Wheel = () => {\r\n  const [fields, setFields] = useState([{ id: 1, name: '', color: 'lightblue' }]);\r\n  const [result, setResult] = useState(null);\r\n  const [selectedSection, setSelectedSection] = useState(null);\r\n  const [wheelRotation, setWheelRotation] = useState('');\r\n\r\n  const triangleRef = useRef(null);\r\n\r\n  const handleAddField = () => {\r\n    const newColor = fields.length % 2 === 0 ? 'lightgreen' : 'lightblue';\r\n    const newField = { id: fields.length + 1, name: '', color: newColor };\r\n    setFields((prevFields) => [...prevFields, newField]);\r\n  };\r\n\r\n  const handleRemoveField = () => {\r\n    if (fields.length > 1) {\r\n      setFields((prevFields) => prevFields.slice(0, -1));\r\n    }\r\n  };\r\n\r\n  const handleFieldNameChange = (id, value) => {\r\n    setFields((prevFields) =>\r\n      prevFields.map((field) => (field.id === id ? { ...field, name: value } : field))\r\n    );\r\n  };\r\n\r\n  const calculateRotation = (elapsedTime) => {\r\n    const easing = (t) => t * (2 - t);\r\n    const normalizedTime = elapsedTime / 2000; // totalDuration is fixed at 2000\r\n    const rotatedAngle = 1200 * easing(normalizedTime);\r\n    return `rotate(${rotatedAngle} 50 50)`;\r\n  };\r\n\r\n  const [triangleEntry] = useInView({\r\n    triggerOnce: true,\r\n    rootMargin: '0px 0px -50% 0px', // Adjust rootMargin as needed\r\n  });\r\n\r\n  const trianglePos = useRef({ x: 0, y: 0 });\r\n\r\n  useEffect(() => {\r\n    if (triangleEntry) {\r\n      const rect = triangleRef.current.getBoundingClientRect();\r\n      trianglePos.current = {\r\n        x: rect.left + rect.width / 2,\r\n        y: rect.top + rect.height,\r\n      };\r\n    }\r\n  }, [triangleEntry]);\r\n\r\n  const handleStartSpin = () => {\r\n    const initialDelay = 100;\r\n    const refreshInterval = 16;\r\n    setResult(null);\r\n\r\n    let startTime = null;\r\n\r\n    const spinAnimation = () => {\r\n      const currentTime = Date.now();\r\n      const elapsedTime = currentTime - startTime;\r\n\r\n      if (elapsedTime < 2000) {\r\n        const rotation = calculateRotation(elapsedTime);\r\n        setWheelRotation(rotation);\r\n\r\n        const sectionCenters = fields.map((_, index) => {\r\n          const angle = (index + 0.5) * (360 / fields.length);\r\n          const x = 50 + 30 * Math.cos((angle * Math.PI) / 180);\r\n          const y = 50 + 30 * Math.sin((angle * Math.PI) / 180);\r\n          return { x, y };\r\n        });\r\n\r\n        const closestSection = sectionCenters.reduce((acc, curr) =>\r\n          Math.abs(curr.y - trianglePos.current.y) < Math.abs(acc.y - trianglePos.current.y) ? curr : acc\r\n        );\r\n\r\n        const resultIndex = sectionCenters.findIndex(\r\n          (center) => center.x === closestSection.x && center.y === closestSection.y\r\n        );\r\n\r\n        if (resultIndex !== -1) {\r\n          setSelectedSection(resultIndex);\r\n        }\r\n      } else {\r\n        clearInterval(animationInterval);\r\n        const spinResult = selectedSection !== null ? selectedSection : 0;\r\n        setResult(spinResult);\r\n        setSelectedSection(spinResult);\r\n      }\r\n    };\r\n\r\n    startTime = Date.now();\r\n    setWheelRotation(calculateRotation(0));\r\n    const animationInterval = setInterval(spinAnimation, refreshInterval);\r\n    setTimeout(() => clearInterval(animationInterval), 2000 + initialDelay);\r\n  };\r\n\r\n  const calculatePath = (index) => {\r\n    const totalFields = fields.length;\r\n    const angle = 360 / totalFields;\r\n    const startAngle = index * angle;\r\n    const endAngle = startAngle + angle;\r\n    const radius = 50;\r\n\r\n    const startX = 50 + radius * Math.cos((startAngle * Math.PI) / 180);\r\n    const startY = 50 + radius * Math.sin((startAngle * Math.PI) / 180);\r\n    const endX = 50 + radius * Math.cos((endAngle * Math.PI) / 180);\r\n    const endY = 50 + radius * Math.sin((endAngle * Math.PI) / 180);\r\n\r\n    const largeArcFlag = angle > 180 ? 1 : 0;\r\n    const color = index % 2 === 0 ? 'blue' : 'red';\r\n\r\n    const textX = 50 + radius * 0.8 * Math.cos(((startAngle + endAngle) / 2) * (Math.PI / 180));\r\n    const textY = 50 + radius * 0.8 * Math.sin(((startAngle + endAngle) / 2) * (Math.PI / 180));\r\n\r\n    return {\r\n      path: (\r\n        <path\r\n          key={index}\r\n          d={`M50 50 L${startX} ${startY} A${radius} ${radius} 0 ${largeArcFlag} 1 ${endX} ${endY} Z`}\r\n          fill={color}\r\n          stroke=\"black\"\r\n          strokeWidth=\"1\"\r\n        />\r\n      ),\r\n      text: (\r\n        <text x={textX} y={textY} fontSize=\"5\" textAnchor=\"middle\" fill=\"black\">\r\n          {fields[index].name}\r\n        </text>\r\n      ),\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"roulette-container\">\r\n      <h2>Wheel Spinner</h2>\r\n      <div className=\"wheel\">\r\n        <svg viewBox=\"0 0 100 100\" width=\"200\" height=\"200\">\r\n          <g transform={wheelRotation}>\r\n            {fields.map((field, index) => {\r\n              const { path, text } = calculatePath(index);\r\n              const isHighlighted = selectedSection !== null && index === selectedSection;\r\n\r\n              return (\r\n                <g\r\n                  key={index}\r\n                  className={isHighlighted ? 'highlighted-section selected-indicator' : 'selected-indicator'}\r\n                >\r\n                  {path}\r\n                  {text}\r\n                </g>\r\n              );\r\n            })}\r\n          </g>\r\n          <g ref={triangleRef} {...triangleEntry}>\r\n            {triangle}\r\n          </g>\r\n        </svg>\r\n      </div>\r\n\r\n      <div className=\"fields-container\">\r\n        {fields.map((field) => (\r\n          <input\r\n            key={field.id}\r\n            type=\"text\"\r\n            placeholder={`Champ ${field.id}`}\r\n            value={field.name}\r\n            onChange={(e) => handleFieldNameChange(field.id, e.target.value)}\r\n          />\r\n        ))}\r\n      </div>\r\n      <button onClick={handleAddField}>Ajouter un champ</button>\r\n      <button onClick={handleRemoveField} disabled={fields.length < 2}>\r\n        Supprimer un champ\r\n      </button>\r\n      <button onClick={handleStartSpin} disabled={fields.length < 2}>\r\n        Lancer la roue\r\n      </button>\r\n      {result !== null && <p>Résultat: {fields[result].name}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wheel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}