{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaspa\\\\OneDrive\\\\Documents\\\\MMI 2\\\\S4\\\\React\\\\SpinningWheel\\\\spin-wheel\\\\src\\\\components\\\\SpinWheel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './css/wheel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst triangle = /*#__PURE__*/_jsxDEV(\"polygon\", {\n  points: \"50,5 55,-5 45,-5\",\n  fill: \"yellow\",\n  stroke: \"black\",\n  strokeWidth: \"1\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 3\n}, this);\nconst RouletteWheel = () => {\n  _s();\n  const [fields, setFields] = useState([]);\n  const [result, setResult] = useState(null);\n  const [rotation, setRotation] = useState(0);\n  const [isSpinning, setIsSpinning] = useState(false);\n  const wheelRef = useRef(null);\n  const triangleRef = useRef(null);\n  const handleAddField = () => {\n    const newColor = generateRandomColor();\n    const newNumber = generateRandomNumber();\n    const newField = {\n      id: fields.length,\n      number: newNumber,\n      color: newColor\n    };\n    setFields(prevFields => [...prevFields, newField]);\n  };\n  const handleRemoveField = () => {\n    if (fields.length > 1) {\n      setFields(prevFields => prevFields.slice(0, -1));\n    }\n  };\n  const handleFieldNameChange = (id, value) => {\n    setFields(prevFields => prevFields.map(field => field.id === id ? {\n      ...field,\n      number: value\n    } : field));\n  };\n  const handleStartSpin = () => {\n    setResult(null);\n    setIsSpinning(true);\n    const totalDuration = 3000;\n    const start = Date.now();\n    const spinAnimation = () => {\n      const elapsed = Date.now() - start;\n      const progress = Math.min(elapsed / totalDuration, 1);\n      const easedProgress = 0.5 - 0.5 * Math.cos(progress * Math.PI);\n      const rotation = 1080 * easedProgress;\n      setRotation(rotation);\n    };\n    const spinInterval = setInterval(spinAnimation, 16);\n    setTimeout(() => {\n      clearInterval(spinInterval);\n      setIsSpinning(false);\n      const wheelRect = wheelRef.current.getBoundingClientRect();\n      const triangleRect = triangleRef.current.getBoundingClientRect();\n      const triangleCenterX = triangleRect.left + triangleRect.width / 2;\n      const triangleCenterY = triangleRect.top + triangleRect.height / 2;\n      const wheelCenterX = wheelRect.left + wheelRect.width / 2;\n      const wheelCenterY = wheelRect.top + wheelRect.height / 2;\n      const dx = triangleCenterX - wheelCenterX;\n      const dy = triangleCenterY - wheelCenterY;\n      let angle = Math.atan2(dy, dx) * (180 / Math.PI);\n      angle = (angle + 360) % 360;\n      const sectionAngle = 360 / fields.length;\n      let selectedSectionIndex = Math.floor(angle / sectionAngle);\n\n      // Adjust the index to avoid potential off-by-one errors\n      selectedSectionIndex = (selectedSectionIndex + fields.length) % fields.length;\n      setResult(selectedSectionIndex);\n    }, totalDuration + 100);\n  };\n  const calculatePath = index => {\n    const totalFields = fields.length;\n    const angle = 360 / totalFields * index;\n    const startAngle = angle;\n    const endAngle = angle + 360 / totalFields;\n    const radius = 50;\n    const startX = 50 + radius * Math.cos(startAngle * Math.PI / 180);\n    const startY = 50 + radius * Math.sin(startAngle * Math.PI / 180);\n    const endX = 50 + radius * Math.cos(endAngle * Math.PI / 180);\n    const endY = 50 + radius * Math.sin(endAngle * Math.PI / 180);\n    const largeArcFlag = endAngle - startAngle <= 180 ? 0 : 1;\n    const color = generateRandomColor();\n    const textX = 50 + radius * 0.8 * Math.cos((startAngle + endAngle) / 2 * (Math.PI / 180));\n    const textY = 50 + radius * 0.8 * Math.sin((startAngle + endAngle) / 2 * (Math.PI / 180));\n    return {\n      path: /*#__PURE__*/_jsxDEV(\"path\", {\n        d: `M50 50 L${startX} ${startY} A${radius} ${radius} 0 ${largeArcFlag} 1 ${endX} ${endY} Z`,\n        fill: color,\n        stroke: \"black\",\n        strokeWidth: \"1\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this),\n      text: /*#__PURE__*/_jsxDEV(\"text\", {\n        x: textX,\n        y: textY,\n        fontSize: \"5\",\n        textAnchor: \"middle\",\n        fill: \"black\",\n        children: fields[index] ? fields[index].number : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    };\n  };\n  const generateRandomColor = () => {\n    const letters = '0123456789ABCDEF';\n    let color = '#';\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  };\n  const generateRandomNumber = () => {\n    return Math.floor(Math.random() * 100); // Adjust the range as needed\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wheel-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Roulette Wheel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wheel\",\n      ref: wheelRef,\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        viewBox: \"0 0 100 100\",\n        width: \"200\",\n        height: \"200\",\n        children: [/*#__PURE__*/_jsxDEV(\"g\", {\n          transform: `rotate(${rotation} 50 50)`,\n          children: fields.map((_, index) => {\n            const {\n              path,\n              text\n            } = calculatePath(index);\n            const isHighlighted = !isSpinning && result !== null && index === result;\n            return /*#__PURE__*/_jsxDEV(\"g\", {\n              className: isHighlighted ? 'highlighted-section selected-indicator' : 'selected-indicator',\n              children: [path, text]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          ref: triangleRef,\n          children: triangle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fields-container\",\n      children: fields.map(field => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: `Champ ${field.id}`,\n        value: field.number,\n        onChange: e => handleFieldNameChange(field.id, e.target.value)\n      }, field.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddField,\n      children: \"Ajouter un champ\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRemoveField,\n      disabled: fields.length < 2,\n      children: \"Supprimer un champ\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartSpin,\n      disabled: fields.length < 2 || isSpinning,\n      children: \"Lancer la roue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), result !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"R\\xE9sultat: \", fields[result] ? fields[result].number : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n_s(RouletteWheel, \"hGTQR9YHAYfPus3PvUJT30WTy9o=\");\n_c = RouletteWheel;\nexport default RouletteWheel;\nvar _c;\n$RefreshReg$(_c, \"RouletteWheel\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","triangle","points","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","RouletteWheel","_s","fields","setFields","result","setResult","rotation","setRotation","isSpinning","setIsSpinning","wheelRef","triangleRef","handleAddField","newColor","generateRandomColor","newNumber","generateRandomNumber","newField","id","length","number","color","prevFields","handleRemoveField","slice","handleFieldNameChange","value","map","field","handleStartSpin","totalDuration","start","Date","now","spinAnimation","elapsed","progress","Math","min","easedProgress","cos","PI","spinInterval","setInterval","setTimeout","clearInterval","wheelRect","current","getBoundingClientRect","triangleRect","triangleCenterX","left","width","triangleCenterY","top","height","wheelCenterX","wheelCenterY","dx","dy","angle","atan2","sectionAngle","selectedSectionIndex","floor","calculatePath","index","totalFields","startAngle","endAngle","radius","startX","startY","sin","endX","endY","largeArcFlag","textX","textY","path","d","text","x","y","fontSize","textAnchor","children","letters","i","random","className","ref","viewBox","transform","_","isHighlighted","type","placeholder","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/gaspa/OneDrive/Documents/MMI 2/S4/React/SpinningWheel/spin-wheel/src/components/SpinWheel.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport './css/wheel.css';\r\n\r\nconst triangle = (\r\n  <polygon\r\n    points=\"50,5 55,-5 45,-5\"\r\n    fill=\"yellow\"\r\n    stroke=\"black\"\r\n    strokeWidth=\"1\"\r\n  />\r\n);\r\n\r\nconst RouletteWheel = () => {\r\n  const [fields, setFields] = useState([]);\r\n  const [result, setResult] = useState(null);\r\n  const [rotation, setRotation] = useState(0);\r\n  const [isSpinning, setIsSpinning] = useState(false);\r\n\r\n  const wheelRef = useRef(null);\r\n  const triangleRef = useRef(null);\r\n\r\n  const handleAddField = () => {\r\n    const newColor = generateRandomColor();\r\n    const newNumber = generateRandomNumber();\r\n    const newField = { id: fields.length, number: newNumber, color: newColor };\r\n    setFields((prevFields) => [...prevFields, newField]);\r\n  };\r\n\r\n  const handleRemoveField = () => {\r\n    if (fields.length > 1) {\r\n      setFields((prevFields) => prevFields.slice(0, -1));\r\n    }\r\n  };\r\n\r\n  const handleFieldNameChange = (id, value) => {\r\n    setFields((prevFields) =>\r\n      prevFields.map((field) => (field.id === id ? { ...field, number: value } : field))\r\n    );\r\n  };\r\n\r\n  const handleStartSpin = () => {\r\n    setResult(null);\r\n    setIsSpinning(true);\r\n\r\n    const totalDuration = 3000;\r\n    const start = Date.now();\r\n\r\n    const spinAnimation = () => {\r\n      const elapsed = Date.now() - start;\r\n      const progress = Math.min(elapsed / totalDuration, 1);\r\n      const easedProgress = 0.5 - 0.5 * Math.cos(progress * Math.PI);\r\n\r\n      const rotation = 1080 * easedProgress;\r\n      setRotation(rotation);\r\n    };\r\n\r\n    const spinInterval = setInterval(spinAnimation, 16);\r\n\r\n    setTimeout(() => {\r\n      clearInterval(spinInterval);\r\n      setIsSpinning(false);\r\n\r\n      const wheelRect = wheelRef.current.getBoundingClientRect();\r\n      const triangleRect = triangleRef.current.getBoundingClientRect();\r\n\r\n      const triangleCenterX = triangleRect.left + triangleRect.width / 2;\r\n      const triangleCenterY = triangleRect.top + triangleRect.height / 2;\r\n\r\n      const wheelCenterX = wheelRect.left + wheelRect.width / 2;\r\n      const wheelCenterY = wheelRect.top + wheelRect.height / 2;\r\n\r\n      const dx = triangleCenterX - wheelCenterX;\r\n      const dy = triangleCenterY - wheelCenterY;\r\n\r\n      let angle = Math.atan2(dy, dx) * (180 / Math.PI);\r\n      angle = (angle + 360) % 360;\r\n\r\n      const sectionAngle = 360 / fields.length;\r\n      let selectedSectionIndex = Math.floor(angle / sectionAngle);\r\n\r\n      // Adjust the index to avoid potential off-by-one errors\r\n      selectedSectionIndex = (selectedSectionIndex + fields.length) % fields.length;\r\n\r\n      setResult(selectedSectionIndex);\r\n    }, totalDuration + 100);\r\n  };\r\n\r\n  const calculatePath = (index) => {\r\n    const totalFields = fields.length;\r\n    const angle = (360 / totalFields) * index;\r\n    const startAngle = angle;\r\n    const endAngle = angle + (360 / totalFields);\r\n\r\n    const radius = 50;\r\n\r\n    const startX = 50 + radius * Math.cos((startAngle * Math.PI) / 180);\r\n    const startY = 50 + radius * Math.sin((startAngle * Math.PI) / 180);\r\n    const endX = 50 + radius * Math.cos((endAngle * Math.PI) / 180);\r\n    const endY = 50 + radius * Math.sin((endAngle * Math.PI) / 180);\r\n\r\n    const largeArcFlag = endAngle - startAngle <= 180 ? 0 : 1;\r\n    const color = generateRandomColor();\r\n\r\n    const textX = 50 + radius * 0.8 * Math.cos(((startAngle + endAngle) / 2) * (Math.PI / 180));\r\n    const textY = 50 + radius * 0.8 * Math.sin(((startAngle + endAngle) / 2) * (Math.PI / 180));\r\n\r\n    return {\r\n      path: (\r\n        <path\r\n          key={index}\r\n          d={`M50 50 L${startX} ${startY} A${radius} ${radius} 0 ${largeArcFlag} 1 ${endX} ${endY} Z`}\r\n          fill={color}\r\n          stroke=\"black\"\r\n          strokeWidth=\"1\"\r\n        />\r\n      ),\r\n      text: (\r\n        <text x={textX} y={textY} fontSize=\"5\" textAnchor=\"middle\" fill=\"black\">\r\n          {fields[index] ? fields[index].number : ''}\r\n        </text>\r\n      ),\r\n    };\r\n  };\r\n\r\n  const generateRandomColor = () => {\r\n    const letters = '0123456789ABCDEF';\r\n    let color = '#';\r\n    for (let i = 0; i < 6; i++) {\r\n      color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n  };\r\n\r\n  const generateRandomNumber = () => {\r\n    return Math.floor(Math.random() * 100); // Adjust the range as needed\r\n  };\r\n\r\n  return (\r\n    <div className=\"wheel-container\">\r\n      <h2>Roulette Wheel</h2>\r\n      <div className=\"wheel\" ref={wheelRef}>\r\n        <svg viewBox=\"0 0 100 100\" width=\"200\" height=\"200\">\r\n          <g transform={`rotate(${rotation} 50 50)`}>\r\n            {fields.map((_, index) => {\r\n              const { path, text } = calculatePath(index);\r\n              const isHighlighted = !isSpinning && result !== null && index === result;\r\n\r\n              return (\r\n                <g\r\n                  key={index}\r\n                  className={isHighlighted ? 'highlighted-section selected-indicator' : 'selected-indicator'}\r\n                >\r\n                  {path}\r\n                  {text}\r\n                </g>\r\n              );\r\n            })}\r\n          </g>\r\n          <g ref={triangleRef}>{triangle}</g>\r\n        </svg>\r\n      </div>\r\n\r\n      <div className=\"fields-container\">\r\n        {fields.map((field) => (\r\n          <input\r\n            key={field.id}\r\n            type=\"text\"\r\n            placeholder={`Champ ${field.id}`}\r\n            value={field.number}\r\n            onChange={(e) => handleFieldNameChange(field.id, e.target.value)}\r\n          />\r\n        ))}\r\n      </div>\r\n      <button onClick={handleAddField}>Ajouter un champ</button>\r\n      <button onClick={handleRemoveField} disabled={fields.length < 2}>\r\n        Supprimer un champ\r\n      </button>\r\n      <button onClick={handleStartSpin} disabled={fields.length < 2 || isSpinning}>\r\n        Lancer la roue\r\n      </button>\r\n      {result !== null && <p>Résultat: {fields[result] ? fields[result].number : ''}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RouletteWheel;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,QAAQ,gBACZD,OAAA;EACEE,MAAM,EAAC,kBAAkB;EACzBC,IAAI,EAAC,QAAQ;EACbC,MAAM,EAAC,OAAO;EACdC,WAAW,EAAC;AAAG;EAAAC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAChB,CACF;AAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACiB,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACqB,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMuB,QAAQ,GAAGtB,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMuB,WAAW,GAAGvB,MAAM,CAAC,IAAI,CAAC;EAEhC,MAAMwB,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,QAAQ,GAAGC,mBAAmB,CAAC,CAAC;IACtC,MAAMC,SAAS,GAAGC,oBAAoB,CAAC,CAAC;IACxC,MAAMC,QAAQ,GAAG;MAAEC,EAAE,EAAEhB,MAAM,CAACiB,MAAM;MAAEC,MAAM,EAAEL,SAAS;MAAEM,KAAK,EAAER;IAAS,CAAC;IAC1EV,SAAS,CAAEmB,UAAU,IAAK,CAAC,GAAGA,UAAU,EAAEL,QAAQ,CAAC,CAAC;EACtD,CAAC;EAED,MAAMM,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIrB,MAAM,CAACiB,MAAM,GAAG,CAAC,EAAE;MACrBhB,SAAS,CAAEmB,UAAU,IAAKA,UAAU,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACpD;EACF,CAAC;EAED,MAAMC,qBAAqB,GAAGA,CAACP,EAAE,EAAEQ,KAAK,KAAK;IAC3CvB,SAAS,CAAEmB,UAAU,IACnBA,UAAU,CAACK,GAAG,CAAEC,KAAK,IAAMA,KAAK,CAACV,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGU,KAAK;MAAER,MAAM,EAAEM;IAAM,CAAC,GAAGE,KAAM,CACnF,CAAC;EACH,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5BxB,SAAS,CAAC,IAAI,CAAC;IACfI,aAAa,CAAC,IAAI,CAAC;IAEnB,MAAMqB,aAAa,GAAG,IAAI;IAC1B,MAAMC,KAAK,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;IAExB,MAAMC,aAAa,GAAGA,CAAA,KAAM;MAC1B,MAAMC,OAAO,GAAGH,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGF,KAAK;MAClC,MAAMK,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAACH,OAAO,GAAGL,aAAa,EAAE,CAAC,CAAC;MACrD,MAAMS,aAAa,GAAG,GAAG,GAAG,GAAG,GAAGF,IAAI,CAACG,GAAG,CAACJ,QAAQ,GAAGC,IAAI,CAACI,EAAE,CAAC;MAE9D,MAAMnC,QAAQ,GAAG,IAAI,GAAGiC,aAAa;MACrChC,WAAW,CAACD,QAAQ,CAAC;IACvB,CAAC;IAED,MAAMoC,YAAY,GAAGC,WAAW,CAACT,aAAa,EAAE,EAAE,CAAC;IAEnDU,UAAU,CAAC,MAAM;MACfC,aAAa,CAACH,YAAY,CAAC;MAC3BjC,aAAa,CAAC,KAAK,CAAC;MAEpB,MAAMqC,SAAS,GAAGpC,QAAQ,CAACqC,OAAO,CAACC,qBAAqB,CAAC,CAAC;MAC1D,MAAMC,YAAY,GAAGtC,WAAW,CAACoC,OAAO,CAACC,qBAAqB,CAAC,CAAC;MAEhE,MAAME,eAAe,GAAGD,YAAY,CAACE,IAAI,GAAGF,YAAY,CAACG,KAAK,GAAG,CAAC;MAClE,MAAMC,eAAe,GAAGJ,YAAY,CAACK,GAAG,GAAGL,YAAY,CAACM,MAAM,GAAG,CAAC;MAElE,MAAMC,YAAY,GAAGV,SAAS,CAACK,IAAI,GAAGL,SAAS,CAACM,KAAK,GAAG,CAAC;MACzD,MAAMK,YAAY,GAAGX,SAAS,CAACQ,GAAG,GAAGR,SAAS,CAACS,MAAM,GAAG,CAAC;MAEzD,MAAMG,EAAE,GAAGR,eAAe,GAAGM,YAAY;MACzC,MAAMG,EAAE,GAAGN,eAAe,GAAGI,YAAY;MAEzC,IAAIG,KAAK,GAAGvB,IAAI,CAACwB,KAAK,CAACF,EAAE,EAAED,EAAE,CAAC,IAAI,GAAG,GAAGrB,IAAI,CAACI,EAAE,CAAC;MAChDmB,KAAK,GAAG,CAACA,KAAK,GAAG,GAAG,IAAI,GAAG;MAE3B,MAAME,YAAY,GAAG,GAAG,GAAG5D,MAAM,CAACiB,MAAM;MACxC,IAAI4C,oBAAoB,GAAG1B,IAAI,CAAC2B,KAAK,CAACJ,KAAK,GAAGE,YAAY,CAAC;;MAE3D;MACAC,oBAAoB,GAAG,CAACA,oBAAoB,GAAG7D,MAAM,CAACiB,MAAM,IAAIjB,MAAM,CAACiB,MAAM;MAE7Ed,SAAS,CAAC0D,oBAAoB,CAAC;IACjC,CAAC,EAAEjC,aAAa,GAAG,GAAG,CAAC;EACzB,CAAC;EAED,MAAMmC,aAAa,GAAIC,KAAK,IAAK;IAC/B,MAAMC,WAAW,GAAGjE,MAAM,CAACiB,MAAM;IACjC,MAAMyC,KAAK,GAAI,GAAG,GAAGO,WAAW,GAAID,KAAK;IACzC,MAAME,UAAU,GAAGR,KAAK;IACxB,MAAMS,QAAQ,GAAGT,KAAK,GAAI,GAAG,GAAGO,WAAY;IAE5C,MAAMG,MAAM,GAAG,EAAE;IAEjB,MAAMC,MAAM,GAAG,EAAE,GAAGD,MAAM,GAAGjC,IAAI,CAACG,GAAG,CAAE4B,UAAU,GAAG/B,IAAI,CAACI,EAAE,GAAI,GAAG,CAAC;IACnE,MAAM+B,MAAM,GAAG,EAAE,GAAGF,MAAM,GAAGjC,IAAI,CAACoC,GAAG,CAAEL,UAAU,GAAG/B,IAAI,CAACI,EAAE,GAAI,GAAG,CAAC;IACnE,MAAMiC,IAAI,GAAG,EAAE,GAAGJ,MAAM,GAAGjC,IAAI,CAACG,GAAG,CAAE6B,QAAQ,GAAGhC,IAAI,CAACI,EAAE,GAAI,GAAG,CAAC;IAC/D,MAAMkC,IAAI,GAAG,EAAE,GAAGL,MAAM,GAAGjC,IAAI,CAACoC,GAAG,CAAEJ,QAAQ,GAAGhC,IAAI,CAACI,EAAE,GAAI,GAAG,CAAC;IAE/D,MAAMmC,YAAY,GAAGP,QAAQ,GAAGD,UAAU,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC;IACzD,MAAM/C,KAAK,GAAGP,mBAAmB,CAAC,CAAC;IAEnC,MAAM+D,KAAK,GAAG,EAAE,GAAGP,MAAM,GAAG,GAAG,GAAGjC,IAAI,CAACG,GAAG,CAAE,CAAC4B,UAAU,GAAGC,QAAQ,IAAI,CAAC,IAAKhC,IAAI,CAACI,EAAE,GAAG,GAAG,CAAC,CAAC;IAC3F,MAAMqC,KAAK,GAAG,EAAE,GAAGR,MAAM,GAAG,GAAG,GAAGjC,IAAI,CAACoC,GAAG,CAAE,CAACL,UAAU,GAAGC,QAAQ,IAAI,CAAC,IAAKhC,IAAI,CAACI,EAAE,GAAG,GAAG,CAAC,CAAC;IAE3F,OAAO;MACLsC,IAAI,eACFzF,OAAA;QAEE0F,CAAC,EAAG,WAAUT,MAAO,IAAGC,MAAO,KAAIF,MAAO,IAAGA,MAAO,MAAKM,YAAa,MAAKF,IAAK,IAAGC,IAAK,IAAI;QAC5FlF,IAAI,EAAE4B,KAAM;QACZ3B,MAAM,EAAC,OAAO;QACdC,WAAW,EAAC;MAAG,GAJVuE,KAAK;QAAAtE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKX,CACF;MACDkF,IAAI,eACF3F,OAAA;QAAM4F,CAAC,EAAEL,KAAM;QAACM,CAAC,EAAEL,KAAM;QAACM,QAAQ,EAAC,GAAG;QAACC,UAAU,EAAC,QAAQ;QAAC5F,IAAI,EAAC,OAAO;QAAA6F,QAAA,EACpEpF,MAAM,CAACgE,KAAK,CAAC,GAAGhE,MAAM,CAACgE,KAAK,CAAC,CAAC9C,MAAM,GAAG;MAAE;QAAAxB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC;IAEV,CAAC;EACH,CAAC;EAED,MAAMe,mBAAmB,GAAGA,CAAA,KAAM;IAChC,MAAMyE,OAAO,GAAG,kBAAkB;IAClC,IAAIlE,KAAK,GAAG,GAAG;IACf,KAAK,IAAImE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1BnE,KAAK,IAAIkE,OAAO,CAAClD,IAAI,CAAC2B,KAAK,CAAC3B,IAAI,CAACoD,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;IAClD;IACA,OAAOpE,KAAK;EACd,CAAC;EAED,MAAML,oBAAoB,GAAGA,CAAA,KAAM;IACjC,OAAOqB,IAAI,CAAC2B,KAAK,CAAC3B,IAAI,CAACoD,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;EAC1C,CAAC;EAED,oBACEnG,OAAA;IAAKoG,SAAS,EAAC,iBAAiB;IAAAJ,QAAA,gBAC9BhG,OAAA;MAAAgG,QAAA,EAAI;IAAc;MAAA1F,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBT,OAAA;MAAKoG,SAAS,EAAC,OAAO;MAACC,GAAG,EAAEjF,QAAS;MAAA4E,QAAA,eACnChG,OAAA;QAAKsG,OAAO,EAAC,aAAa;QAACxC,KAAK,EAAC,KAAK;QAACG,MAAM,EAAC,KAAK;QAAA+B,QAAA,gBACjDhG,OAAA;UAAGuG,SAAS,EAAG,UAASvF,QAAS,SAAS;UAAAgF,QAAA,EACvCpF,MAAM,CAACyB,GAAG,CAAC,CAACmE,CAAC,EAAE5B,KAAK,KAAK;YACxB,MAAM;cAAEa,IAAI;cAAEE;YAAK,CAAC,GAAGhB,aAAa,CAACC,KAAK,CAAC;YAC3C,MAAM6B,aAAa,GAAG,CAACvF,UAAU,IAAIJ,MAAM,KAAK,IAAI,IAAI8D,KAAK,KAAK9D,MAAM;YAExE,oBACEd,OAAA;cAEEoG,SAAS,EAAEK,aAAa,GAAG,wCAAwC,GAAG,oBAAqB;cAAAT,QAAA,GAE1FP,IAAI,EACJE,IAAI;YAAA,GAJAf,KAAK;cAAAtE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAKT,CAAC;UAER,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACJT,OAAA;UAAGqG,GAAG,EAAEhF,WAAY;UAAA2E,QAAA,EAAE/F;QAAQ;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENT,OAAA;MAAKoG,SAAS,EAAC,kBAAkB;MAAAJ,QAAA,EAC9BpF,MAAM,CAACyB,GAAG,CAAEC,KAAK,iBAChBtC,OAAA;QAEE0G,IAAI,EAAC,MAAM;QACXC,WAAW,EAAG,SAAQrE,KAAK,CAACV,EAAG,EAAE;QACjCQ,KAAK,EAAEE,KAAK,CAACR,MAAO;QACpB8E,QAAQ,EAAGC,CAAC,IAAK1E,qBAAqB,CAACG,KAAK,CAACV,EAAE,EAAEiF,CAAC,CAACC,MAAM,CAAC1E,KAAK;MAAE,GAJ5DE,KAAK,CAACV,EAAE;QAAAtB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKd,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNT,OAAA;MAAQ+G,OAAO,EAAEzF,cAAe;MAAA0E,QAAA,EAAC;IAAgB;MAAA1F,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1DT,OAAA;MAAQ+G,OAAO,EAAE9E,iBAAkB;MAAC+E,QAAQ,EAAEpG,MAAM,CAACiB,MAAM,GAAG,CAAE;MAAAmE,QAAA,EAAC;IAEjE;MAAA1F,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTT,OAAA;MAAQ+G,OAAO,EAAExE,eAAgB;MAACyE,QAAQ,EAAEpG,MAAM,CAACiB,MAAM,GAAG,CAAC,IAAIX,UAAW;MAAA8E,QAAA,EAAC;IAE7E;MAAA1F,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRK,MAAM,KAAK,IAAI,iBAAId,OAAA;MAAAgG,QAAA,GAAG,eAAU,EAACpF,MAAM,CAACE,MAAM,CAAC,GAAGF,MAAM,CAACE,MAAM,CAAC,CAACgB,MAAM,GAAG,EAAE;IAAA;MAAAxB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/E,CAAC;AAEV,CAAC;AAACE,EAAA,CA3KID,aAAa;AAAAuG,EAAA,GAAbvG,aAAa;AA6KnB,eAAeA,aAAa;AAAC,IAAAuG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}