{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaspa\\\\OneDrive\\\\Documents\\\\MMI 2\\\\S4\\\\React\\\\SpinningWheel\\\\spin-wheel\\\\src\\\\components\\\\SpinWheel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { System, Box, Vector } from 'detect-collisions';\nimport './css/wheel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [results, setResults] = useState(['', '']);\n  const [selectedResult, setSelectedResult] = useState(null);\n  const [spinning, setSpinning] = useState(false);\n  const [customResult, setCustomResult] = useState('');\n  const wheelRef = useRef(null);\n  const triangleRef = useRef(null);\n  const collisionSystem = new System();\n  useEffect(() => {\n    // Créez et insérez chaque section dans le système de collision\n    results.forEach((_, index) => {\n      const widthDeLaSection = 50; // Ajustez la largeur de chaque section selon vos besoins\n      const heightDeLaSection = 50; // Ajustez la hauteur de chaque section selon vos besoins\n      const wheelCenterX = wheelRef.current.getBoundingClientRect().left + wheelRef.current.getBoundingClientRect().width / 2;\n      const wheelCenterY = wheelRef.current.getBoundingClientRect().top + wheelRef.current.getBoundingClientRect().height / 2;\n      const section = collisionSystem.createBox(new Vector(wheelCenterX, wheelCenterY), widthDeLaSection, heightDeLaSection);\n      section.userData = {\n        sectionIndex: index\n      }; // userData peut être utilisé pour stocker des informations supplémentaires\n      collisionSystem.insert(section);\n    });\n  }, [results, wheelRef]);\n  const handleCustomResultChange = event => {\n    setCustomResult(event.target.value);\n  };\n  const setCustomResultText = () => {\n    if (customResult.trim() !== '') {\n      setResults([...results, customResult]);\n      setCustomResult('');\n    } else {\n      alert('Veuillez saisir du texte.');\n    }\n  };\n  const handleStartSpin = () => {\n    // Reste du code inchangé\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Roulette Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `roulette ${spinning ? 'spinning' : ''}`,\n      ref: wheelRef,\n      children: [results.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `segment ${selectedResult === index ? 'selected' : ''}`,\n        children: result\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"needle\",\n        ref: triangleRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-result-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nouveau r\\xE9sultat\",\n        value: customResult,\n        onChange: handleCustomResultChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: setCustomResultText,\n        children: \"Ajouter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartSpin,\n      disabled: spinning,\n      children: \"Lancer la roulette\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"CVSkeuArjaioWPxuQXVAqRtwcm0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","System","Box","Vector","jsxDEV","_jsxDEV","App","_s","results","setResults","selectedResult","setSelectedResult","spinning","setSpinning","customResult","setCustomResult","wheelRef","triangleRef","collisionSystem","forEach","_","index","widthDeLaSection","heightDeLaSection","wheelCenterX","current","getBoundingClientRect","left","width","wheelCenterY","top","height","section","createBox","userData","sectionIndex","insert","handleCustomResultChange","event","target","value","setCustomResultText","trim","alert","handleStartSpin","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","result","type","placeholder","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/gaspa/OneDrive/Documents/MMI 2/S4/React/SpinningWheel/spin-wheel/src/components/SpinWheel.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { System, Box, Vector } from 'detect-collisions';\r\nimport './css/wheel.css';\r\n\r\nconst App = () => {\r\n  const [results, setResults] = useState(['', '']);\r\n  const [selectedResult, setSelectedResult] = useState(null);\r\n  const [spinning, setSpinning] = useState(false);\r\n  const [customResult, setCustomResult] = useState('');\r\n  const wheelRef = useRef(null);\r\n  const triangleRef = useRef(null);\r\n  const collisionSystem = new System();\r\n\r\n  useEffect(() => {\r\n    // Créez et insérez chaque section dans le système de collision\r\n    results.forEach((_, index) => {\r\n      const widthDeLaSection = 50; // Ajustez la largeur de chaque section selon vos besoins\r\n      const heightDeLaSection = 50; // Ajustez la hauteur de chaque section selon vos besoins\r\n      const wheelCenterX = wheelRef.current.getBoundingClientRect().left + wheelRef.current.getBoundingClientRect().width / 2;\r\n      const wheelCenterY = wheelRef.current.getBoundingClientRect().top + wheelRef.current.getBoundingClientRect().height / 2;\r\n\r\n      const section = collisionSystem.createBox(\r\n        new Vector(wheelCenterX, wheelCenterY),\r\n        widthDeLaSection,\r\n        heightDeLaSection\r\n      );\r\n      section.userData = { sectionIndex: index }; // userData peut être utilisé pour stocker des informations supplémentaires\r\n      collisionSystem.insert(section);\r\n    });\r\n  }, [results, wheelRef]);\r\n\r\n  const handleCustomResultChange = (event) => {\r\n    setCustomResult(event.target.value);\r\n  };\r\n\r\n  const setCustomResultText = () => {\r\n    if (customResult.trim() !== '') {\r\n      setResults([...results, customResult]);\r\n      setCustomResult('');\r\n    } else {\r\n      alert('Veuillez saisir du texte.');\r\n    }\r\n  };\r\n\r\n  const handleStartSpin = () => {\r\n    // Reste du code inchangé\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Roulette Game</h1>\r\n      <div className={`roulette ${spinning ? 'spinning' : ''}`} ref={wheelRef}>\r\n        {results.map((result, index) => (\r\n          <div key={index} className={`segment ${selectedResult === index ? 'selected' : ''}`}>\r\n            {result}\r\n          </div>\r\n        ))}\r\n        <div className=\"needle\" ref={triangleRef}></div>\r\n      </div>\r\n      <div className=\"custom-result-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Nouveau résultat\"\r\n          value={customResult}\r\n          onChange={handleCustomResultChange}\r\n        />\r\n        <button onClick={setCustomResultText}>Ajouter</button>\r\n      </div>\r\n      <button onClick={handleStartSpin} disabled={spinning}>\r\n        Lancer la roulette\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}