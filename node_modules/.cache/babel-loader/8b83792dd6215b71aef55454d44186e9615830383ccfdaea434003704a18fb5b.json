{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gaspard\\\\Documents\\\\MMI\\\\Cours\\\\React\\\\SpinningWheel\\\\spin-wheel\\\\src\\\\components\\\\RoulettePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport WheelComponent from './WheelConstructor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RoulettePage({\n  segments,\n  onBack\n}) {\n  _s();\n  const [winner, setWinner] = useState(null); // définir l'état winner et la fonction setWinner\n\n  // alterner entre rose et violet\n  const alternateColors = index => {\n    return index % 2 === 0 ? \"#C622C0\" : \"#dc87d9\";\n  };\n\n  // génerer les couleurs des sections\n  const segColors = segments.map((segment, index) => alternateColors(index));\n  const onFinished = winner => {\n    setWinner(winner); // met à jour l'état winner\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title marg-top2 marg-top-mobile\",\n      children: \"SPIN !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wheel marg-top2\",\n      children: /*#__PURE__*/_jsxDEV(WheelComponent, {\n        segments: segments,\n        segColors: segColors,\n        onFinished: onFinished,\n        primaryColor: \"black\",\n        contrastColor: \"white\",\n        buttonText: \"Spin\",\n        isOnlyOnce: false,\n        size: 130,\n        upDuration: 500,\n        downDuration: 600,\n        fontFamily: \"'Luckiest Guy', cursive\",\n        fontSize: 400\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-center button-win\",\n      children: winner && /*#__PURE__*/_jsxDEV(\"button\", {\n        children: winner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-center marg-top-mobile\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-pink button-stay\",\n        onClick: () => onBack('input'),\n        children: \"Custom Wheel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(RoulettePage, \"b1EWeOCHfG1cQ4jYzn3zl7ZPGuk=\");\n_c = RoulettePage;\nvar _c;\n$RefreshReg$(_c, \"RoulettePage\");","map":{"version":3,"names":["React","useState","WheelComponent","jsxDEV","_jsxDEV","RoulettePage","segments","onBack","_s","winner","setWinner","alternateColors","index","segColors","map","segment","onFinished","children","className","fileName","_jsxFileName","lineNumber","columnNumber","primaryColor","contrastColor","buttonText","isOnlyOnce","size","upDuration","downDuration","fontFamily","fontSize","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Gaspard/Documents/MMI/Cours/React/SpinningWheel/spin-wheel/src/components/RoulettePage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport WheelComponent from './WheelConstructor';\r\n\r\nexport default function RoulettePage({ segments, onBack }) {\r\n  const [winner, setWinner] = useState(null); // définir l'état winner et la fonction setWinner\r\n\r\n  // alterner entre rose et violet\r\n  const alternateColors = (index) => {\r\n    return index % 2 === 0 ? \"#C622C0\" : \"#dc87d9\";\r\n  };\r\n\r\n  // génerer les couleurs des sections\r\n  const segColors = segments.map((segment, index) => alternateColors(index));\r\n\r\n  const onFinished = (winner) => {\r\n    setWinner(winner); // met à jour l'état winner\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className='title marg-top2 marg-top-mobile'>SPIN !</h1>\r\n      <div className='wheel marg-top2'>\r\n        \r\n        <WheelComponent\r\n          segments={segments}\r\n          segColors={segColors}\r\n          onFinished={onFinished}\r\n          primaryColor=\"black\"\r\n          contrastColor=\"white\"\r\n          buttonText=\"Spin\"\r\n          isOnlyOnce={false}\r\n          size={130}\r\n          upDuration={500}\r\n          downDuration={600}\r\n          fontFamily=\"'Luckiest Guy', cursive\"\r\n          fontSize={400}\r\n        />\r\n        \r\n      </div>\r\n      <div className='flex-center button-win'>\r\n        {winner && <button>{winner}</button>}\r\n      </div>\r\n      <div className='flex-center marg-top-mobile'>\r\n        <button className='button-pink button-stay' onClick={() => onBack('input')}>Custom Wheel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,cAAc,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,eAAe,SAASC,YAAYA,CAAC;EAAEC,QAAQ;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EACzD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE5C;EACA,MAAMU,eAAe,GAAIC,KAAK,IAAK;IACjC,OAAOA,KAAK,GAAG,CAAC,KAAK,CAAC,GAAG,SAAS,GAAG,SAAS;EAChD,CAAC;;EAED;EACA,MAAMC,SAAS,GAAGP,QAAQ,CAACQ,GAAG,CAAC,CAACC,OAAO,EAAEH,KAAK,KAAKD,eAAe,CAACC,KAAK,CAAC,CAAC;EAE1E,MAAMI,UAAU,GAAIP,MAAM,IAAK;IAC7BC,SAAS,CAACD,MAAM,CAAC,CAAC,CAAC;EACrB,CAAC;EAED,oBACEL,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAIc,SAAS,EAAC,iCAAiC;MAAAD,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3DlB,OAAA;MAAKc,SAAS,EAAC,iBAAiB;MAAAD,QAAA,eAE9Bb,OAAA,CAACF,cAAc;QACbI,QAAQ,EAAEA,QAAS;QACnBO,SAAS,EAAEA,SAAU;QACrBG,UAAU,EAAEA,UAAW;QACvBO,YAAY,EAAC,OAAO;QACpBC,aAAa,EAAC,OAAO;QACrBC,UAAU,EAAC,MAAM;QACjBC,UAAU,EAAE,KAAM;QAClBC,IAAI,EAAE,GAAI;QACVC,UAAU,EAAE,GAAI;QAChBC,YAAY,EAAE,GAAI;QAClBC,UAAU,EAAC,yBAAyB;QACpCC,QAAQ,EAAE;MAAI;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEC,CAAC,eACNlB,OAAA;MAAKc,SAAS,EAAC,wBAAwB;MAAAD,QAAA,EACpCR,MAAM,iBAAIL,OAAA;QAAAa,QAAA,EAASR;MAAM;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACNlB,OAAA;MAAKc,SAAS,EAAC,6BAA6B;MAAAD,QAAA,eAC1Cb,OAAA;QAAQc,SAAS,EAAC,yBAAyB;QAACc,OAAO,EAAEA,CAAA,KAAMzB,MAAM,CAAC,OAAO,CAAE;QAAAU,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9F,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACd,EAAA,CA5CuBH,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}