{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaspa\\\\OneDrive\\\\Documents\\\\MMI 2\\\\S4\\\\React\\\\SpinningWheel\\\\spin-wheel\\\\src\\\\components\\\\SoundContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SoundContext = /*#__PURE__*/createContext();\nexport const SoundProvider = ({\n  children\n}) => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const playSound = () => {\n    setIsPlaying(true);\n    setTimeout(() => setIsPlaying(false), 2000); // Arrêter la lecture du son après 2 secondes\n  };\n  return /*#__PURE__*/_jsxDEV(SoundContext.Provider, {\n    value: {\n      isPlaying,\n      playSound\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(SoundProvider, \"dxr5RgzQJlMZkbQdHY9iHZ+FF0w=\");\n_c = SoundProvider;\nexport const useSound = () => {\n  _s2();\n  return useContext(SoundContext);\n};\n_s2(useSound, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"SoundProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","SoundContext","SoundProvider","children","_s","isPlaying","setIsPlaying","playSound","setTimeout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useSound","_s2","$RefreshReg$"],"sources":["C:/Users/gaspa/OneDrive/Documents/MMI 2/S4/React/SpinningWheel/spin-wheel/src/components/SoundContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\n\r\nconst SoundContext = createContext();\r\n\r\nexport const SoundProvider = ({ children }) => {\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n  const playSound = () => {\r\n    setIsPlaying(true);\r\n    setTimeout(() => setIsPlaying(false), 2000); // Arrêter la lecture du son après 2 secondes\r\n  };\r\n\r\n  return (\r\n    <SoundContext.Provider value={{ isPlaying, playSound }}>\r\n      {children}\r\n    </SoundContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useSound = () => useContext(SoundContext);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMM,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMS,SAAS,GAAGA,CAAA,KAAM;IACtBD,YAAY,CAAC,IAAI,CAAC;IAClBE,UAAU,CAAC,MAAMF,YAAY,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;EAC/C,CAAC;EAED,oBACEN,OAAA,CAACC,YAAY,CAACQ,QAAQ;IAACC,KAAK,EAAE;MAAEL,SAAS;MAAEE;IAAU,CAAE;IAAAJ,QAAA,EACpDA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACV,EAAA,CAbWF,aAAa;AAAAa,EAAA,GAAbb,aAAa;AAe1B,OAAO,MAAMc,QAAQ,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMpB,UAAU,CAACI,YAAY,CAAC;AAAA;AAACgB,GAAA,CAA1CD,QAAQ;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}