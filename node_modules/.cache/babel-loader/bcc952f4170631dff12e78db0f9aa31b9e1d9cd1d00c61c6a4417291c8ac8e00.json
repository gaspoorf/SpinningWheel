{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaspa\\\\OneDrive\\\\Documents\\\\MMI 2\\\\S4\\\\React\\\\SpinningWheel\\\\spin-wheel\\\\src\\\\components\\\\SpinWheel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./styles.css\";\nimport WheelComponent from \"react-wheel-of-prizes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [numFields, setNumFields] = useState(6); // Nombre de champs par défaut\n  const [fieldValues, setFieldValues] = useState(Array.from({\n    length: numFields\n  }, () => \"\"));\n  const [segments, setSegments] = useState(Array.from({\n    length: numFields\n  }, (_, index) => `Field ${index + 1}`));\n  const [segColors, setSegColors] = useState([\"#EE4040\", \"#F0CF50\", \"#815CD1\", \"#3DA5E0\", \"#34A24F\"]);\n  const updateFieldValues = (index, value) => {\n    const newFieldValues = [...fieldValues];\n    newFieldValues[index] = value;\n    setFieldValues(newFieldValues);\n  };\n  const handleGenerateSegments = () => {\n    const newSegments = fieldValues.map((value, index) => {\n      if (value.trim() === \"\") {\n        return `Field ${index + 1}`;\n      }\n      return value;\n    });\n    setSegments(newSegments);\n  };\n  const onFinished = winner => {\n    console.log(winner);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Configurez vos champs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [...Array(numFields)].map((_, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: `Field ${index + 1}`,\n        value: fieldValues[index],\n        onChange: e => updateFieldValues(index, e.target.value)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateSegments,\n      children: \"G\\xE9n\\xE9rer les segments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Roulette\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(WheelComponent, {\n        segments: segments,\n        segColors: segColors,\n        onFinished: winner => onFinished(winner),\n        primaryColor: \"black\",\n        contrastColor: \"white\",\n        buttonText: \"Spin\",\n        isOnlyOnce: false,\n        size: 190,\n        upDuration: 500,\n        downDuration: 600,\n        fontFamily: \"Arial\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lAzLz7ylol3pKZrfZJmtTxqi9ds=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","WheelComponent","jsxDEV","_jsxDEV","App","_s","numFields","setNumFields","fieldValues","setFieldValues","Array","from","length","segments","setSegments","_","index","segColors","setSegColors","updateFieldValues","value","newFieldValues","handleGenerateSegments","newSegments","map","trim","onFinished","winner","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","onClick","primaryColor","contrastColor","buttonText","isOnlyOnce","size","upDuration","downDuration","fontFamily","_c","$RefreshReg$"],"sources":["C:/Users/gaspa/OneDrive/Documents/MMI 2/S4/React/SpinningWheel/spin-wheel/src/components/SpinWheel.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./styles.css\";\r\nimport WheelComponent from \"react-wheel-of-prizes\";\r\n\r\nexport default function App() {\r\n  const [numFields, setNumFields] = useState(6); // Nombre de champs par défaut\r\n  const [fieldValues, setFieldValues] = useState(Array.from({ length: numFields }, () => \"\"));\r\n\r\n  const [segments, setSegments] = useState(Array.from({ length: numFields }, (_, index) => `Field ${index + 1}`));\r\n  const [segColors, setSegColors] = useState([\"#EE4040\", \"#F0CF50\", \"#815CD1\", \"#3DA5E0\", \"#34A24F\"]);\r\n\r\n  const updateFieldValues = (index, value) => {\r\n    const newFieldValues = [...fieldValues];\r\n    newFieldValues[index] = value;\r\n    setFieldValues(newFieldValues);\r\n  };\r\n\r\n  const handleGenerateSegments = () => {\r\n    const newSegments = fieldValues.map((value, index) => {\r\n      if (value.trim() === \"\") {\r\n        return `Field ${index + 1}`;\r\n      }\r\n      return value;\r\n    });\r\n    setSegments(newSegments);\r\n  };\r\n\r\n  const onFinished = (winner) => {\r\n    console.log(winner);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Configurez vos champs</h1>\r\n      <div>\r\n        {[...Array(numFields)].map((_, index) => (\r\n          <input\r\n            key={index}\r\n            type=\"text\"\r\n            placeholder={`Field ${index + 1}`}\r\n            value={fieldValues[index]}\r\n            onChange={(e) => updateFieldValues(index, e.target.value)}\r\n          />\r\n        ))}\r\n      </div>\r\n      <button onClick={handleGenerateSegments}>Générer les segments</button>\r\n      <hr />\r\n      <h1>Roulette</h1>\r\n      <div>\r\n        <WheelComponent\r\n          segments={segments}\r\n          segColors={segColors}\r\n          onFinished={(winner) => onFinished(winner)}\r\n          primaryColor=\"black\"\r\n          contrastColor=\"white\"\r\n          buttonText=\"Spin\"\r\n          isOnlyOnce={false}\r\n          size={190}\r\n          upDuration={500}\r\n          downDuration={600}\r\n          fontFamily=\"Arial\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}