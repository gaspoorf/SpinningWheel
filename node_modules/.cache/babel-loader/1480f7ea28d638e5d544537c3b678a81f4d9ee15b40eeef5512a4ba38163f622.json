{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaspa\\\\OneDrive\\\\Documents\\\\MMI 2\\\\S4\\\\React\\\\SpinningWheel\\\\spin-wheel\\\\src\\\\components\\\\SpinWheel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './css/wheel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [numSections, setNumSections] = useState(4); // Nombre de sections par défaut\n  const [sections, setSections] = useState(Array.from({\n    length: numSections\n  }, (_, index) => `Section ${index + 1}`));\n  const [winnerIndex, setWinnerIndex] = useState(null);\n  const rouletteRef = useRef(null);\n  const handleNumSectionsChange = e => {\n    const newNumSections = parseInt(e.target.value, 10);\n    setNumSections(newNumSections);\n    setSections(Array.from({\n      length: newNumSections\n    }, (_, index) => `Section ${index + 1}`));\n  };\n  const spinRoulette = () => {\n    const randomWinnerIndex = Math.floor(Math.random() * numSections);\n    setWinnerIndex(randomWinnerIndex);\n\n    // Calcul de l'angle pour pointer vers la section gagnante\n    const angle = 360 / numSections * randomWinnerIndex;\n    rouletteRef.current.style.transition = 'transform 3s ease-out';\n    rouletteRef.current.style.transform = `rotate(${3600 + angle}deg)`; // On fait tourner la roulette 10 tours\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Nombre de sections :\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: numSections,\n        onChange: handleNumSectionsChange,\n        min: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: spinRoulette,\n      children: \"Lancer la roulette\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roulette-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roulette\",\n        ref: rouletteRef,\n        children: sections.map((section, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `section ${winnerIndex === index ? 'winner' : ''}`,\n          children: section\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jzASy686T3Lc+UnW9cFfSrrcIzI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","App","_s","numSections","setNumSections","sections","setSections","Array","from","length","_","index","winnerIndex","setWinnerIndex","rouletteRef","handleNumSectionsChange","e","newNumSections","parseInt","target","value","spinRoulette","randomWinnerIndex","Math","floor","random","angle","current","style","transition","transform","className","children","type","onChange","min","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","map","section","_c","$RefreshReg$"],"sources":["C:/Users/gaspa/OneDrive/Documents/MMI 2/S4/React/SpinningWheel/spin-wheel/src/components/SpinWheel.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport './css/wheel.css';\r\n\r\nfunction App() {\r\n  const [numSections, setNumSections] = useState(4); // Nombre de sections par défaut\r\n  const [sections, setSections] = useState(Array.from({ length: numSections }, (_, index) => `Section ${index + 1}`));\r\n  const [winnerIndex, setWinnerIndex] = useState(null);\r\n  const rouletteRef = useRef(null);\r\n\r\n  const handleNumSectionsChange = (e) => {\r\n    const newNumSections = parseInt(e.target.value, 10);\r\n    setNumSections(newNumSections);\r\n    setSections(Array.from({ length: newNumSections }, (_, index) => `Section ${index + 1}`));\r\n  };\r\n\r\n  const spinRoulette = () => {\r\n    const randomWinnerIndex = Math.floor(Math.random() * numSections);\r\n    setWinnerIndex(randomWinnerIndex);\r\n\r\n    // Calcul de l'angle pour pointer vers la section gagnante\r\n    const angle = (360 / numSections) * randomWinnerIndex;\r\n    rouletteRef.current.style.transition = 'transform 3s ease-out';\r\n    rouletteRef.current.style.transform = `rotate(${3600 + angle}deg)`; // On fait tourner la roulette 10 tours\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <label>\r\n        Nombre de sections :\r\n        <input type=\"number\" value={numSections} onChange={handleNumSectionsChange} min=\"1\" />\r\n      </label>\r\n      <button onClick={spinRoulette}>Lancer la roulette</button>\r\n\r\n      <div className=\"roulette-container\">\r\n        <div className=\"roulette\" ref={rouletteRef}>\r\n          {sections.map((section, index) => (\r\n            <div key={index} className={`section ${winnerIndex === index ? 'winner' : ''}`}>\r\n              {section}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}