{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaspa\\\\OneDrive\\\\Documents\\\\MMI 2\\\\S4\\\\React\\\\SpinningWheel\\\\spin-wheel\\\\src\\\\components\\\\SpinWheel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useInView } from 'react-intersection-observer';\nimport './css/wheel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst triangle = /*#__PURE__*/_jsxDEV(\"polygon\", {\n  points: \"50,5 55,15 45,15\",\n  fill: \"yellow\",\n  stroke: \"black\",\n  strokeWidth: \"1\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\nconst Wheel = () => {\n  _s();\n  const [fields, setFields] = useState([{\n    id: 1,\n    name: '',\n    color: 'lightblue'\n  }]);\n  const [result, setResult] = useState(null);\n  const [selectedSection, setSelectedSection] = useState(null);\n  const [wheelRotation, setWheelRotation] = useState('');\n  const triangleRef = useRef(null);\n  const [triangleEntry] = useInView({\n    triggerOnce: true,\n    rootMargin: '-50% 0px -50% 0px'\n  });\n  useEffect(() => {\n    if (triangleEntry && triangleEntry.intersectionRatio > 0) {\n      const sectionIndex = Math.floor((360 - wheelRotation % 360 + 360) % 360 / (360 / fields.length));\n      setSelectedSection(sectionIndex);\n      setResult(sectionIndex);\n    }\n  }, [triangleEntry, wheelRotation, fields.length]);\n  const handleAddField = () => {\n    const newColor = fields.length % 2 === 0 ? 'lightgreen' : 'lightblue';\n    const newField = {\n      id: fields.length + 1,\n      name: '',\n      color: newColor\n    };\n    setFields(prevFields => [...prevFields, newField]);\n  };\n  const handleRemoveField = () => {\n    if (fields.length > 1) {\n      setFields(prevFields => prevFields.slice(0, -1));\n    }\n  };\n  const handleFieldNameChange = (id, value) => {\n    setFields(prevFields => prevFields.map(field => field.id === id ? {\n      ...field,\n      name: value\n    } : field));\n  };\n  const calculateRotation = elapsedTime => {\n    const easing = t => t * (2 - t);\n    const normalizedTime = elapsedTime / totalDuration;\n    const rotatedAngle = 1200 * easing(normalizedTime);\n    return `rotate(${rotatedAngle} 50 50)`;\n  };\n  const handleStartSpin = () => {\n    const initialDelay = 100;\n    const totalDuration = 2000;\n    const refreshInterval = 16;\n    setResult(null);\n    const startTime = Date.now();\n    const spinAnimation = () => {\n      const currentTime = Date.now();\n      const elapsedTime = currentTime - startTime;\n      if (elapsedTime < totalDuration) {\n        const rotation = calculateRotation(elapsedTime);\n        setWheelRotation(rotation);\n      } else {\n        clearInterval(animationInterval);\n        const spinResult = calculateResult();\n        setResult(spinResult);\n        setSelectedSection(spinResult);\n      }\n    };\n    const calculateResult = () => {\n      return selectedSection !== null ? selectedSection : 0;\n    };\n    setWheelRotation(calculateRotation(0));\n    const animationInterval = setInterval(spinAnimation, refreshInterval);\n    setTimeout(() => clearInterval(animationInterval), totalDuration + initialDelay);\n  };\n  const calculatePath = index => {\n    const totalFields = fields.length;\n    const angle = 360 / totalFields;\n    const startAngle = index * angle;\n    const endAngle = startAngle + angle;\n    const radius = 50;\n    const radians = angle => angle * Math.PI / 180;\n    const startX = 50 + radius * Math.cos(radians(startAngle));\n    const startY = 50 + radius * Math.sin(radians(startAngle));\n    const endX = 50 + radius * Math.cos(radians(endAngle));\n    const endY = 50 + radius * Math.sin(radians(endAngle));\n    const largeArcFlag = angle > 180 ? 1 : 0;\n    const color = index % 2 === 0 ? 'blue' : 'red';\n    const textX = 50 + radius * 0.8 * Math.cos(radians((startAngle + endAngle) / 2));\n    const textY = 50 + radius * 0.8 * Math.sin(radians((startAngle + endAngle) / 2));\n    return {\n      path: /*#__PURE__*/_jsxDEV(\"path\", {\n        d: `M50 50 L${startX} ${startY} A${radius} ${radius} 0 ${largeArcFlag} 1 ${endX} ${endY} Z`,\n        fill: color,\n        stroke: \"black\",\n        strokeWidth: \"1\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this),\n      text: /*#__PURE__*/_jsxDEV(\"text\", {\n        x: textX,\n        y: textY,\n        fontSize: \"5\",\n        textAnchor: \"middle\",\n        fill: \"black\",\n        children: fields[index].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"roulette-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Wheel Spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wheel\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        viewBox: \"0 0 100 100\",\n        width: \"200\",\n        height: \"200\",\n        children: [/*#__PURE__*/_jsxDEV(\"g\", {\n          transform: wheelRotation,\n          children: fields.map((field, index) => {\n            const {\n              path,\n              text\n            } = calculatePath(index);\n            const isHighlighted = selectedSection !== null && index === selectedSection;\n            return /*#__PURE__*/_jsxDEV(\"g\", {\n              className: isHighlighted ? 'highlighted-section selected-indicator' : 'selected-indicator',\n              children: [path, text]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          ref: triangleRef,\n          ...triangleEntry,\n          children: triangle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fields-container\",\n      children: fields.map(field => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: `Champ ${field.id}`,\n        value: field.name,\n        onChange: e => handleFieldNameChange(field.id, e.target.value)\n      }, field.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddField,\n      children: \"Ajouter un champ\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRemoveField,\n      disabled: fields.length < 2,\n      children: \"Supprimer un champ\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartSpin,\n      disabled: fields.length < 2,\n      children: \"Lancer la roue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), result !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"R\\xE9sultat: \", fields[result].name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s(Wheel, \"lXnavhQt6RnpEjC70a1Ai+hHvtY=\", false, function () {\n  return [useInView];\n});\n_c = Wheel;\nexport default Wheel;\nvar _c;\n$RefreshReg$(_c, \"Wheel\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useInView","jsxDEV","_jsxDEV","triangle","points","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","Wheel","_s","fields","setFields","id","name","color","result","setResult","selectedSection","setSelectedSection","wheelRotation","setWheelRotation","triangleRef","triangleEntry","triggerOnce","rootMargin","intersectionRatio","sectionIndex","Math","floor","length","handleAddField","newColor","newField","prevFields","handleRemoveField","slice","handleFieldNameChange","value","map","field","calculateRotation","elapsedTime","easing","t","normalizedTime","totalDuration","rotatedAngle","handleStartSpin","initialDelay","refreshInterval","startTime","Date","now","spinAnimation","currentTime","rotation","clearInterval","animationInterval","spinResult","calculateResult","setInterval","setTimeout","calculatePath","index","totalFields","angle","startAngle","endAngle","radius","radians","PI","startX","cos","startY","sin","endX","endY","largeArcFlag","textX","textY","path","d","text","x","y","fontSize","textAnchor","children","className","viewBox","width","height","transform","isHighlighted","ref","type","placeholder","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/gaspa/OneDrive/Documents/MMI 2/S4/React/SpinningWheel/spin-wheel/src/components/SpinWheel.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useInView } from 'react-intersection-observer';\r\nimport './css/wheel.css';\r\n\r\nconst triangle = (\r\n  <polygon\r\n    points=\"50,5 55,15 45,15\"\r\n    fill=\"yellow\"\r\n    stroke=\"black\"\r\n    strokeWidth=\"1\"\r\n  />\r\n);\r\n\r\nconst Wheel = () => {\r\n  const [fields, setFields] = useState([{ id: 1, name: '', color: 'lightblue' }]);\r\n  const [result, setResult] = useState(null);\r\n  const [selectedSection, setSelectedSection] = useState(null);\r\n  const [wheelRotation, setWheelRotation] = useState('');\r\n\r\n  const triangleRef = useRef(null);\r\n  const [triangleEntry] = useInView({\r\n    triggerOnce: true,\r\n    rootMargin: '-50% 0px -50% 0px',\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (triangleEntry && triangleEntry.intersectionRatio > 0) {\r\n      const sectionIndex = Math.floor(\r\n        (360 - (wheelRotation % 360) + 360) % 360 / (360 / fields.length)\r\n      );\r\n      setSelectedSection(sectionIndex);\r\n      setResult(sectionIndex);\r\n    }\r\n  }, [triangleEntry, wheelRotation, fields.length]);\r\n\r\n  const handleAddField = () => {\r\n    const newColor = fields.length % 2 === 0 ? 'lightgreen' : 'lightblue';\r\n    const newField = { id: fields.length + 1, name: '', color: newColor };\r\n    setFields((prevFields) => [...prevFields, newField]);\r\n  };\r\n\r\n  const handleRemoveField = () => {\r\n    if (fields.length > 1) {\r\n      setFields((prevFields) => prevFields.slice(0, -1));\r\n    }\r\n  };\r\n\r\n  const handleFieldNameChange = (id, value) => {\r\n    setFields((prevFields) =>\r\n      prevFields.map((field) => (field.id === id ? { ...field, name: value } : field))\r\n    );\r\n  };\r\n\r\n  const calculateRotation = (elapsedTime) => {\r\n    const easing = (t) => t * (2 - t);\r\n    const normalizedTime = elapsedTime / totalDuration;\r\n    const rotatedAngle = 1200 * easing(normalizedTime);\r\n    return `rotate(${rotatedAngle} 50 50)`;\r\n  };\r\n\r\n  const handleStartSpin = () => {\r\n    const initialDelay = 100;\r\n    const totalDuration = 2000;\r\n    const refreshInterval = 16;\r\n    setResult(null);\r\n\r\n    const startTime = Date.now();\r\n\r\n    const spinAnimation = () => {\r\n      const currentTime = Date.now();\r\n      const elapsedTime = currentTime - startTime;\r\n\r\n      if (elapsedTime < totalDuration) {\r\n        const rotation = calculateRotation(elapsedTime);\r\n        setWheelRotation(rotation);\r\n      } else {\r\n        clearInterval(animationInterval);\r\n        const spinResult = calculateResult();\r\n        setResult(spinResult);\r\n        setSelectedSection(spinResult);\r\n      }\r\n    };\r\n\r\n    const calculateResult = () => {\r\n      return selectedSection !== null ? selectedSection : 0;\r\n    };\r\n\r\n    setWheelRotation(calculateRotation(0));\r\n    const animationInterval = setInterval(spinAnimation, refreshInterval);\r\n    setTimeout(() => clearInterval(animationInterval), totalDuration + initialDelay);\r\n  };\r\n\r\n  const calculatePath = (index) => {\r\n    const totalFields = fields.length;\r\n    const angle = 360 / totalFields;\r\n    const startAngle = index * angle;\r\n    const endAngle = startAngle + angle;\r\n    const radius = 50;\r\n\r\n    const radians = (angle) => (angle * Math.PI) / 180;\r\n\r\n    const startX = 50 + radius * Math.cos(radians(startAngle));\r\n    const startY = 50 + radius * Math.sin(radians(startAngle));\r\n    const endX = 50 + radius * Math.cos(radians(endAngle));\r\n    const endY = 50 + radius * Math.sin(radians(endAngle));\r\n\r\n    const largeArcFlag = angle > 180 ? 1 : 0;\r\n    const color = index % 2 === 0 ? 'blue' : 'red';\r\n\r\n    const textX = 50 + radius * 0.8 * Math.cos(radians((startAngle + endAngle) / 2));\r\n    const textY = 50 + radius * 0.8 * Math.sin(radians((startAngle + endAngle) / 2));\r\n\r\n    return {\r\n      path: (\r\n        <path\r\n          key={index}\r\n          d={`M50 50 L${startX} ${startY} A${radius} ${radius} 0 ${largeArcFlag} 1 ${endX} ${endY} Z`}\r\n          fill={color}\r\n          stroke=\"black\"\r\n          strokeWidth=\"1\"\r\n        />\r\n      ),\r\n      text: (\r\n        <text x={textX} y={textY} fontSize=\"5\" textAnchor=\"middle\" fill=\"black\">\r\n          {fields[index].name}\r\n        </text>\r\n      ),\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"roulette-container\">\r\n      <h2>Wheel Spinner</h2>\r\n      <div className=\"wheel\">\r\n        <svg viewBox=\"0 0 100 100\" width=\"200\" height=\"200\">\r\n          <g transform={wheelRotation}>\r\n            {fields.map((field, index) => {\r\n              const { path, text } = calculatePath(index);\r\n              const isHighlighted = selectedSection !== null && index === selectedSection;\r\n\r\n              return (\r\n                <g\r\n                  key={index}\r\n                  className={isHighlighted ? 'highlighted-section selected-indicator' : 'selected-indicator'}\r\n                >\r\n                  {path}\r\n                  {text}\r\n                </g>\r\n              );\r\n            })}\r\n          </g>\r\n          <g ref={triangleRef} {...triangleEntry}>\r\n            {triangle}\r\n          </g>\r\n        </svg>\r\n      </div>\r\n\r\n      <div className=\"fields-container\">\r\n        {fields.map((field) => (\r\n          <input\r\n            key={field.id}\r\n            type=\"text\"\r\n            placeholder={`Champ ${field.id}`}\r\n            value={field.name}\r\n            onChange={(e) => handleFieldNameChange(field.id, e.target.value)}\r\n          />\r\n        ))}\r\n      </div>\r\n      <button onClick={handleAddField}>Ajouter un champ</button>\r\n      <button onClick={handleRemoveField} disabled={fields.length < 2}>\r\n        Supprimer un champ\r\n      </button>\r\n      <button onClick={handleStartSpin} disabled={fields.length < 2}>\r\n        Lancer la roue\r\n      </button>\r\n      {result !== null && <p>Résultat: {fields[result].name}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wheel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}