{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaspa\\\\OneDrive\\\\Documents\\\\MMI 2\\\\S4\\\\React\\\\SpinningWheel\\\\spin-wheel\\\\src\\\\components\\\\ConfigurePage.jsx\",\n  _s = $RefreshSig$();\n// ConfigurePage.jsx\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ConfigurePage() {\n  _s();\n  const [numFields, setNumFields] = useState(6);\n  const [fieldValues, setFieldValues] = useState(Array.from({\n    length: numFields\n  }, () => \"\"));\n  const history = useHistory();\n  const updateFieldValues = (index, value) => {\n    const newFieldValues = [...fieldValues];\n    newFieldValues[index] = value;\n    setFieldValues(newFieldValues);\n  };\n  const handleGenerateSegments = () => {\n    const segments = fieldValues.map((value, index) => {\n      if (value.trim() === \"\") {\n        return `Field ${index + 1}`;\n      }\n      return value;\n    });\n    // Passer les segments à la page de la roulette\n    history.push({\n      pathname: \"/roulette\",\n      state: {\n        segments\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Configurez vos champs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), [...Array(numFields)].map((_, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: `Field ${index + 1}`,\n      value: fieldValues[index],\n      onChange: e => updateFieldValues(index, e.target.value)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateSegments,\n      children: \"G\\xE9n\\xE9rer les segments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(ConfigurePage, \"HynA2NLYYiRLcWVvzb7rNJrvCes=\", false, function () {\n  return [useHistory];\n});\n_c = ConfigurePage;\nvar _c;\n$RefreshReg$(_c, \"ConfigurePage\");","map":{"version":3,"names":["React","useState","useHistory","jsxDEV","_jsxDEV","ConfigurePage","_s","numFields","setNumFields","fieldValues","setFieldValues","Array","from","length","history","updateFieldValues","index","value","newFieldValues","handleGenerateSegments","segments","map","trim","push","pathname","state","children","fileName","_jsxFileName","lineNumber","columnNumber","_","type","placeholder","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/gaspa/OneDrive/Documents/MMI 2/S4/React/SpinningWheel/spin-wheel/src/components/ConfigurePage.jsx"],"sourcesContent":["// ConfigurePage.jsx\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function ConfigurePage() {\r\n  const [numFields, setNumFields] = useState(6);\r\n  const [fieldValues, setFieldValues] = useState(Array.from({ length: numFields }, () => \"\"));\r\n  const history = useHistory();\r\n\r\n  const updateFieldValues = (index, value) => {\r\n    const newFieldValues = [...fieldValues];\r\n    newFieldValues[index] = value;\r\n    setFieldValues(newFieldValues);\r\n  };\r\n\r\n  const handleGenerateSegments = () => {\r\n    const segments = fieldValues.map((value, index) => {\r\n      if (value.trim() === \"\") {\r\n        return `Field ${index + 1}`;\r\n      }\r\n      return value;\r\n    });\r\n    // Passer les segments à la page de la roulette\r\n    history.push({\r\n      pathname: \"/roulette\",\r\n      state: { segments }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Configurez vos champs</h1>\r\n      {[...Array(numFields)].map((_, index) => (\r\n        <input\r\n          key={index}\r\n          type=\"text\"\r\n          placeholder={`Field ${index + 1}`}\r\n          value={fieldValues[index]}\r\n          onChange={(e) => updateFieldValues(index, e.target.value)}\r\n        />\r\n      ))}\r\n      <button onClick={handleGenerateSegments}>Générer les segments</button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAACU,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAEN;EAAU,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC;EAC3F,MAAMO,OAAO,GAAGZ,UAAU,CAAC,CAAC;EAE5B,MAAMa,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IAC1C,MAAMC,cAAc,GAAG,CAAC,GAAGT,WAAW,CAAC;IACvCS,cAAc,CAACF,KAAK,CAAC,GAAGC,KAAK;IAC7BP,cAAc,CAACQ,cAAc,CAAC;EAChC,CAAC;EAED,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;IACnC,MAAMC,QAAQ,GAAGX,WAAW,CAACY,GAAG,CAAC,CAACJ,KAAK,EAAED,KAAK,KAAK;MACjD,IAAIC,KAAK,CAACK,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;QACvB,OAAQ,SAAQN,KAAK,GAAG,CAAE,EAAC;MAC7B;MACA,OAAOC,KAAK;IACd,CAAC,CAAC;IACF;IACAH,OAAO,CAACS,IAAI,CAAC;MACXC,QAAQ,EAAE,WAAW;MACrBC,KAAK,EAAE;QAAEL;MAAS;IACpB,CAAC,CAAC;EACJ,CAAC;EAED,oBACEhB,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC7B,CAAC,GAAGnB,KAAK,CAACJ,SAAS,CAAC,CAAC,CAACc,GAAG,CAAC,CAACU,CAAC,EAAEf,KAAK,kBAClCZ,OAAA;MAEE4B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAG,SAAQjB,KAAK,GAAG,CAAE,EAAE;MAClCC,KAAK,EAAER,WAAW,CAACO,KAAK,CAAE;MAC1BkB,QAAQ,EAAGC,CAAC,IAAKpB,iBAAiB,CAACC,KAAK,EAAEmB,CAAC,CAACC,MAAM,CAACnB,KAAK;IAAE,GAJrDD,KAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKX,CACF,CAAC,eACF1B,OAAA;MAAQiC,OAAO,EAAElB,sBAAuB;MAAAO,QAAA,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnE,CAAC;AAEV;AAACxB,EAAA,CAxCuBD,aAAa;EAAA,QAGnBH,UAAU;AAAA;AAAAoC,EAAA,GAHJjC,aAAa;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}