{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaspa\\\\OneDrive\\\\Documents\\\\MMI 2\\\\S4\\\\React\\\\SpinningWheel\\\\spin-wheel\\\\src\\\\components\\\\SpinWheel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './css/wheel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wheel = () => {\n  _s();\n  const [fields, setFields] = useState([{\n    id: 1,\n    name: ''\n  }]);\n  const [result, setResult] = useState(null);\n  const handleAddField = () => {\n    const newField = {\n      id: fields.length + 1,\n      name: ''\n    };\n    setFields(prevFields => [...prevFields, newField]);\n  };\n  const handleRemoveField = () => {\n    if (fields.length > 1) {\n      setFields(prevFields => prevFields.slice(0, -1));\n    }\n  };\n  const handleFieldNameChange = (id, value) => {\n    setFields(prevFields => prevFields.map(field => field.id === id ? {\n      ...field,\n      name: value\n    } : field));\n  };\n  const handleStartSpin = () => {\n    const randomResult = Math.floor(Math.random() * fields.length);\n    setResult(randomResult);\n  };\n  const calculateRotation = index => {\n    const totalFields = fields.length;\n    const angle = 360 / totalFields * index;\n    return `rotate(${angle} 50 50)`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"roulette-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Wheel Spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wheel\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        viewBox: \"0 0 100 100\",\n        width: \"200\",\n        height: \"200\",\n        children: fields.map((field, index) => /*#__PURE__*/_jsxDEV(\"g\", {\n          transform: calculateRotation(index),\n          children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n            x: \"45\",\n            y: \"10\",\n            width: \"10\",\n            height: \"40\",\n            fill: index === result ? 'lightgreen' : 'lightblue'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: \"50\",\n            y: \"60\",\n            fontSize: \"5\",\n            textAnchor: \"middle\",\n            fill: \"black\",\n            children: field.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, field.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fields-container\",\n      children: fields.map(field => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: `Champ ${field.id}`,\n        value: field.name,\n        onChange: e => handleFieldNameChange(field.id, e.target.value)\n      }, field.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddField,\n      children: \"Ajouter un champ\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRemoveField,\n      disabled: fields.length < 2,\n      children: \"Supprimer un champ\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartSpin,\n      disabled: fields.length < 2,\n      children: \"Lancer la roue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), result !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"R\\xE9sultat: \", fields[result].name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Wheel, \"E8nfdHJ/RRMzCM0STVKwLphy5I4=\");\n_c = Wheel;\nexport default Wheel;\nvar _c;\n$RefreshReg$(_c, \"Wheel\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Wheel","_s","fields","setFields","id","name","result","setResult","handleAddField","newField","length","prevFields","handleRemoveField","slice","handleFieldNameChange","value","map","field","handleStartSpin","randomResult","Math","floor","random","calculateRotation","index","totalFields","angle","className","children","fileName","_jsxFileName","lineNumber","columnNumber","viewBox","width","height","transform","x","y","fill","fontSize","textAnchor","type","placeholder","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/gaspa/OneDrive/Documents/MMI 2/S4/React/SpinningWheel/spin-wheel/src/components/SpinWheel.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './css/wheel.css';\r\n\r\nconst Wheel = () => {\r\n  const [fields, setFields] = useState([{ id: 1, name: '' }]);\r\n  const [result, setResult] = useState(null);\r\n\r\n  const handleAddField = () => {\r\n    const newField = { id: fields.length + 1, name: '' };\r\n    setFields((prevFields) => [...prevFields, newField]);\r\n  };\r\n\r\n  const handleRemoveField = () => {\r\n    if (fields.length > 1) {\r\n      setFields((prevFields) => prevFields.slice(0, -1));\r\n    }\r\n  };\r\n\r\n  const handleFieldNameChange = (id, value) => {\r\n    setFields((prevFields) =>\r\n      prevFields.map((field) => (field.id === id ? { ...field, name: value } : field))\r\n    );\r\n  };\r\n\r\n  const handleStartSpin = () => {\r\n    const randomResult = Math.floor(Math.random() * fields.length);\r\n    setResult(randomResult);\r\n  };\r\n\r\n  const calculateRotation = (index) => {\r\n    const totalFields = fields.length;\r\n    const angle = (360 / totalFields) * index;\r\n    return `rotate(${angle} 50 50)`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"roulette-container\">\r\n      <h2>Wheel Spinner</h2>\r\n      <div className=\"wheel\">\r\n        <svg viewBox=\"0 0 100 100\" width=\"200\" height=\"200\">\r\n          {fields.map((field, index) => (\r\n            <g key={field.id} transform={calculateRotation(index)}>\r\n              <rect\r\n                x=\"45\"\r\n                y=\"10\"\r\n                width=\"10\"\r\n                height=\"40\"\r\n                fill={index === result ? 'lightgreen' : 'lightblue'}\r\n              />\r\n              <text x=\"50\" y=\"60\" fontSize=\"5\" textAnchor=\"middle\" fill=\"black\">\r\n                {field.name}\r\n              </text>\r\n            </g>\r\n          ))}\r\n        </svg>\r\n      </div>\r\n      <div className=\"fields-container\">\r\n        {fields.map((field) => (\r\n          <input\r\n            key={field.id}\r\n            type=\"text\"\r\n            placeholder={`Champ ${field.id}`}\r\n            value={field.name}\r\n            onChange={(e) => handleFieldNameChange(field.id, e.target.value)}\r\n          />\r\n        ))}\r\n      </div>\r\n      <button onClick={handleAddField}>Ajouter un champ</button>\r\n      <button onClick={handleRemoveField} disabled={fields.length < 2}>\r\n        Supprimer un champ\r\n      </button>\r\n      <button onClick={handleStartSpin} disabled={fields.length < 2}>\r\n        Lancer la roue\r\n      </button>\r\n      {result !== null && <p>RÃ©sultat: {fields[result].name}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wheel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}