{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaspa\\\\OneDrive\\\\Documents\\\\MMI 2\\\\S4\\\\React\\\\SpinningWheel\\\\spin-wheel\\\\src\\\\components\\\\SettingsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SettingsPage({\n  onBack,\n  onToggleMusic,\n  onToggleSound\n}) {\n  _s();\n  const [musicEnabled, setMusicEnabled] = useState(true);\n  const [soundEnabled, setSoundEnabled] = useState(true);\n  useEffect(() => {\n    // Charger les préférences depuis localStorage (s'il existe)\n    const storedMusicPreference = localStorage.getItem('musicEnabled');\n    if (storedMusicPreference !== null) {\n      setMusicEnabled(JSON.parse(storedMusicPreference));\n    }\n    const storedSoundPreference = localStorage.getItem('soundEnabled');\n    if (storedSoundPreference !== null) {\n      setSoundEnabled(JSON.parse(storedSoundPreference));\n    }\n  }, []);\n\n  // Mettre à jour localStorage lorsqu'il y a des changements dans les préférences\n  useEffect(() => {\n    localStorage.setItem('musicEnabled', JSON.stringify(musicEnabled));\n    onToggleMusic(musicEnabled);\n  }, [musicEnabled, onToggleMusic]);\n  useEffect(() => {\n    localStorage.setItem('soundEnabled', JSON.stringify(soundEnabled));\n    onToggleSound(soundEnabled);\n  }, [soundEnabled, onToggleSound]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Param\\xE8tres\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: musicEnabled,\n        onChange: () => setMusicEnabled(!musicEnabled)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), \"Activer la musique de fond\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: soundEnabled,\n        onChange: () => setSoundEnabled(!soundEnabled)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), \"Activer le son de clic\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onBack,\n      children: \"Retour\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(SettingsPage, \"X3S7WrqoIYUT9ZO5num5LPMk15s=\");\n_c = SettingsPage;\nvar _c;\n$RefreshReg$(_c, \"SettingsPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SettingsPage","onBack","onToggleMusic","onToggleSound","_s","musicEnabled","setMusicEnabled","soundEnabled","setSoundEnabled","storedMusicPreference","localStorage","getItem","JSON","parse","storedSoundPreference","setItem","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/gaspa/OneDrive/Documents/MMI 2/S4/React/SpinningWheel/spin-wheel/src/components/SettingsPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nexport default function SettingsPage({ onBack, onToggleMusic, onToggleSound }) {\r\n  const [musicEnabled, setMusicEnabled] = useState(true);\r\n  const [soundEnabled, setSoundEnabled] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Charger les préférences depuis localStorage (s'il existe)\r\n    const storedMusicPreference = localStorage.getItem('musicEnabled');\r\n    if (storedMusicPreference !== null) {\r\n      setMusicEnabled(JSON.parse(storedMusicPreference));\r\n    }\r\n\r\n    const storedSoundPreference = localStorage.getItem('soundEnabled');\r\n    if (storedSoundPreference !== null) {\r\n      setSoundEnabled(JSON.parse(storedSoundPreference));\r\n    }\r\n  }, []);\r\n\r\n  // Mettre à jour localStorage lorsqu'il y a des changements dans les préférences\r\n  useEffect(() => {\r\n    localStorage.setItem('musicEnabled', JSON.stringify(musicEnabled));\r\n    onToggleMusic(musicEnabled);\r\n  }, [musicEnabled, onToggleMusic]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('soundEnabled', JSON.stringify(soundEnabled));\r\n    onToggleSound(soundEnabled);\r\n  }, [soundEnabled, onToggleSound]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Paramètres</h2>\r\n      <label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={musicEnabled}\r\n          onChange={() => setMusicEnabled(!musicEnabled)}\r\n        />\r\n        Activer la musique de fond\r\n      </label>\r\n      <br />\r\n      <label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={soundEnabled}\r\n          onChange={() => setSoundEnabled(!soundEnabled)}\r\n        />\r\n        Activer le son de clic\r\n      </label>\r\n      <br />\r\n      <button onClick={onBack}>Retour</button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}